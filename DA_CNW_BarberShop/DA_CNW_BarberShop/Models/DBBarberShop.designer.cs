#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DA_CNW_BarberShop.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_BARBER_SHOP")]
	public partial class DBBarberShopDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblBookAdvance(tblBookAdvance instance);
    partial void UpdatetblBookAdvance(tblBookAdvance instance);
    partial void DeletetblBookAdvance(tblBookAdvance instance);
    partial void InserttblTypeService(tblTypeService instance);
    partial void UpdatetblTypeService(tblTypeService instance);
    partial void DeletetblTypeService(tblTypeService instance);
    partial void InserttblCart(tblCart instance);
    partial void UpdatetblCart(tblCart instance);
    partial void DeletetblCart(tblCart instance);
    partial void InserttblCartDetail(tblCartDetail instance);
    partial void UpdatetblCartDetail(tblCartDetail instance);
    partial void DeletetblCartDetail(tblCartDetail instance);
    partial void InserttblCategoryPost(tblCategoryPost instance);
    partial void UpdatetblCategoryPost(tblCategoryPost instance);
    partial void DeletetblCategoryPost(tblCategoryPost instance);
    partial void InserttblCategoryProduct(tblCategoryProduct instance);
    partial void UpdatetblCategoryProduct(tblCategoryProduct instance);
    partial void DeletetblCategoryProduct(tblCategoryProduct instance);
    partial void InserttblCustomer(tblCustomer instance);
    partial void UpdatetblCustomer(tblCustomer instance);
    partial void DeletetblCustomer(tblCustomer instance);
    partial void InserttblDeatailOrder(tblDeatailOrder instance);
    partial void UpdatetblDeatailOrder(tblDeatailOrder instance);
    partial void DeletetblDeatailOrder(tblDeatailOrder instance);
    partial void InserttblDetailBookAdvance(tblDetailBookAdvance instance);
    partial void UpdatetblDetailBookAdvance(tblDetailBookAdvance instance);
    partial void DeletetblDetailBookAdvance(tblDetailBookAdvance instance);
    partial void InserttblDiscount(tblDiscount instance);
    partial void UpdatetblDiscount(tblDiscount instance);
    partial void DeletetblDiscount(tblDiscount instance);
    partial void InserttblGroupPost(tblGroupPost instance);
    partial void UpdatetblGroupPost(tblGroupPost instance);
    partial void DeletetblGroupPost(tblGroupPost instance);
    partial void InserttblGroupProduct(tblGroupProduct instance);
    partial void UpdatetblGroupProduct(tblGroupProduct instance);
    partial void DeletetblGroupProduct(tblGroupProduct instance);
    partial void InserttblImage(tblImage instance);
    partial void UpdatetblImage(tblImage instance);
    partial void DeletetblImage(tblImage instance);
    partial void InserttblOrderProduct(tblOrderProduct instance);
    partial void UpdatetblOrderProduct(tblOrderProduct instance);
    partial void DeletetblOrderProduct(tblOrderProduct instance);
    partial void InserttblPay(tblPay instance);
    partial void UpdatetblPay(tblPay instance);
    partial void DeletetblPay(tblPay instance);
    partial void InserttblPayment(tblPayment instance);
    partial void UpdatetblPayment(tblPayment instance);
    partial void DeletetblPayment(tblPayment instance);
    partial void InserttblPost(tblPost instance);
    partial void UpdatetblPost(tblPost instance);
    partial void DeletetblPost(tblPost instance);
    partial void InserttblProduct(tblProduct instance);
    partial void UpdatetblProduct(tblProduct instance);
    partial void DeletetblProduct(tblProduct instance);
    partial void InserttblReceipt(tblReceipt instance);
    partial void UpdatetblReceipt(tblReceipt instance);
    partial void DeletetblReceipt(tblReceipt instance);
    partial void InserttblReceiptDetail(tblReceiptDetail instance);
    partial void UpdatetblReceiptDetail(tblReceiptDetail instance);
    partial void DeletetblReceiptDetail(tblReceiptDetail instance);
    partial void InserttblService(tblService instance);
    partial void UpdatetblService(tblService instance);
    partial void DeletetblService(tblService instance);
    partial void InserttblStaff(tblStaff instance);
    partial void UpdatetblStaff(tblStaff instance);
    partial void DeletetblStaff(tblStaff instance);
    partial void InserttblStore(tblStore instance);
    partial void UpdatetblStore(tblStore instance);
    partial void DeletetblStore(tblStore instance);
    #endregion
		
		public DBBarberShopDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DB_BARBER_SHOPConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBBarberShopDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBBarberShopDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBBarberShopDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBBarberShopDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblBookAdvance> tblBookAdvances
		{
			get
			{
				return this.GetTable<tblBookAdvance>();
			}
		}
		
		public System.Data.Linq.Table<tblTypeService> tblTypeServices
		{
			get
			{
				return this.GetTable<tblTypeService>();
			}
		}
		
		public System.Data.Linq.Table<tblCart> tblCarts
		{
			get
			{
				return this.GetTable<tblCart>();
			}
		}
		
		public System.Data.Linq.Table<tblCartDetail> tblCartDetails
		{
			get
			{
				return this.GetTable<tblCartDetail>();
			}
		}
		
		public System.Data.Linq.Table<tblCategoryPost> tblCategoryPosts
		{
			get
			{
				return this.GetTable<tblCategoryPost>();
			}
		}
		
		public System.Data.Linq.Table<tblCategoryProduct> tblCategoryProducts
		{
			get
			{
				return this.GetTable<tblCategoryProduct>();
			}
		}
		
		public System.Data.Linq.Table<tblCustomer> tblCustomers
		{
			get
			{
				return this.GetTable<tblCustomer>();
			}
		}
		
		public System.Data.Linq.Table<tblDeatailOrder> tblDeatailOrders
		{
			get
			{
				return this.GetTable<tblDeatailOrder>();
			}
		}
		
		public System.Data.Linq.Table<tblDetailBookAdvance> tblDetailBookAdvances
		{
			get
			{
				return this.GetTable<tblDetailBookAdvance>();
			}
		}
		
		public System.Data.Linq.Table<tblDiscount> tblDiscounts
		{
			get
			{
				return this.GetTable<tblDiscount>();
			}
		}
		
		public System.Data.Linq.Table<tblGroupPost> tblGroupPosts
		{
			get
			{
				return this.GetTable<tblGroupPost>();
			}
		}
		
		public System.Data.Linq.Table<tblGroupProduct> tblGroupProducts
		{
			get
			{
				return this.GetTable<tblGroupProduct>();
			}
		}
		
		public System.Data.Linq.Table<tblImage> tblImages
		{
			get
			{
				return this.GetTable<tblImage>();
			}
		}
		
		public System.Data.Linq.Table<tblOrderProduct> tblOrderProducts
		{
			get
			{
				return this.GetTable<tblOrderProduct>();
			}
		}
		
		public System.Data.Linq.Table<tblPay> tblPays
		{
			get
			{
				return this.GetTable<tblPay>();
			}
		}
		
		public System.Data.Linq.Table<tblPayment> tblPayments
		{
			get
			{
				return this.GetTable<tblPayment>();
			}
		}
		
		public System.Data.Linq.Table<tblPost> tblPosts
		{
			get
			{
				return this.GetTable<tblPost>();
			}
		}
		
		public System.Data.Linq.Table<tblProduct> tblProducts
		{
			get
			{
				return this.GetTable<tblProduct>();
			}
		}
		
		public System.Data.Linq.Table<tblReceipt> tblReceipts
		{
			get
			{
				return this.GetTable<tblReceipt>();
			}
		}
		
		public System.Data.Linq.Table<tblReceiptDetail> tblReceiptDetails
		{
			get
			{
				return this.GetTable<tblReceiptDetail>();
			}
		}
		
		public System.Data.Linq.Table<tblService> tblServices
		{
			get
			{
				return this.GetTable<tblService>();
			}
		}
		
		public System.Data.Linq.Table<tblStaff> tblStaffs
		{
			get
			{
				return this.GetTable<tblStaff>();
			}
		}
		
		public System.Data.Linq.Table<tblStore> tblStores
		{
			get
			{
				return this.GetTable<tblStore>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblBookAdvance")]
	public partial class tblBookAdvance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_iBookAdvanceID;
		
		private System.Nullable<int> _FK_iStaffID;
		
		private int _FK_iCustomerID;
		
		private System.Nullable<int> _FK_iStoreID;
		
		private System.Nullable<System.DateTime> _dCreateTime;
		
		private System.Nullable<System.DateTime> _dExecutionTime;
		
		private string _sNote;
		
		private EntitySet<tblDetailBookAdvance> _tblDetailBookAdvances;
		
		private EntityRef<tblCustomer> _tblCustomer;
		
		private EntityRef<tblStaff> _tblStaff;
		
		private EntityRef<tblStore> _tblStore;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_iBookAdvanceIDChanging(int value);
    partial void OnPK_iBookAdvanceIDChanged();
    partial void OnFK_iStaffIDChanging(System.Nullable<int> value);
    partial void OnFK_iStaffIDChanged();
    partial void OnFK_iCustomerIDChanging(int value);
    partial void OnFK_iCustomerIDChanged();
    partial void OnFK_iStoreIDChanging(System.Nullable<int> value);
    partial void OnFK_iStoreIDChanged();
    partial void OndCreateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OndCreateTimeChanged();
    partial void OndExecutionTimeChanging(System.Nullable<System.DateTime> value);
    partial void OndExecutionTimeChanged();
    partial void OnsNoteChanging(string value);
    partial void OnsNoteChanged();
    #endregion
		
		public tblBookAdvance()
		{
			this._tblDetailBookAdvances = new EntitySet<tblDetailBookAdvance>(new Action<tblDetailBookAdvance>(this.attach_tblDetailBookAdvances), new Action<tblDetailBookAdvance>(this.detach_tblDetailBookAdvances));
			this._tblCustomer = default(EntityRef<tblCustomer>);
			this._tblStaff = default(EntityRef<tblStaff>);
			this._tblStore = default(EntityRef<tblStore>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_iBookAdvanceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_iBookAdvanceID
		{
			get
			{
				return this._PK_iBookAdvanceID;
			}
			set
			{
				if ((this._PK_iBookAdvanceID != value))
				{
					this.OnPK_iBookAdvanceIDChanging(value);
					this.SendPropertyChanging();
					this._PK_iBookAdvanceID = value;
					this.SendPropertyChanged("PK_iBookAdvanceID");
					this.OnPK_iBookAdvanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_iStaffID", DbType="Int")]
		public System.Nullable<int> FK_iStaffID
		{
			get
			{
				return this._FK_iStaffID;
			}
			set
			{
				if ((this._FK_iStaffID != value))
				{
					if (this._tblStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_iStaffIDChanging(value);
					this.SendPropertyChanging();
					this._FK_iStaffID = value;
					this.SendPropertyChanged("FK_iStaffID");
					this.OnFK_iStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_iCustomerID", DbType="Int NOT NULL")]
		public int FK_iCustomerID
		{
			get
			{
				return this._FK_iCustomerID;
			}
			set
			{
				if ((this._FK_iCustomerID != value))
				{
					if (this._tblCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_iCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._FK_iCustomerID = value;
					this.SendPropertyChanged("FK_iCustomerID");
					this.OnFK_iCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_iStoreID", DbType="Int")]
		public System.Nullable<int> FK_iStoreID
		{
			get
			{
				return this._FK_iStoreID;
			}
			set
			{
				if ((this._FK_iStoreID != value))
				{
					if (this._tblStore.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_iStoreIDChanging(value);
					this.SendPropertyChanging();
					this._FK_iStoreID = value;
					this.SendPropertyChanged("FK_iStoreID");
					this.OnFK_iStoreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dCreateTime", DbType="Date")]
		public System.Nullable<System.DateTime> dCreateTime
		{
			get
			{
				return this._dCreateTime;
			}
			set
			{
				if ((this._dCreateTime != value))
				{
					this.OndCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._dCreateTime = value;
					this.SendPropertyChanged("dCreateTime");
					this.OndCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dExecutionTime", DbType="Date")]
		public System.Nullable<System.DateTime> dExecutionTime
		{
			get
			{
				return this._dExecutionTime;
			}
			set
			{
				if ((this._dExecutionTime != value))
				{
					this.OndExecutionTimeChanging(value);
					this.SendPropertyChanging();
					this._dExecutionTime = value;
					this.SendPropertyChanged("dExecutionTime");
					this.OndExecutionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sNote", DbType="NVarChar(500)")]
		public string sNote
		{
			get
			{
				return this._sNote;
			}
			set
			{
				if ((this._sNote != value))
				{
					this.OnsNoteChanging(value);
					this.SendPropertyChanging();
					this._sNote = value;
					this.SendPropertyChanged("sNote");
					this.OnsNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblBookAdvance_tblDetailBookAdvance", Storage="_tblDetailBookAdvances", ThisKey="PK_iBookAdvanceID", OtherKey="FK_iBookAdvanceID")]
		public EntitySet<tblDetailBookAdvance> tblDetailBookAdvances
		{
			get
			{
				return this._tblDetailBookAdvances;
			}
			set
			{
				this._tblDetailBookAdvances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCustomer_tblBookAdvance", Storage="_tblCustomer", ThisKey="FK_iCustomerID", OtherKey="PK_iCustomerID", IsForeignKey=true)]
		public tblCustomer tblCustomer
		{
			get
			{
				return this._tblCustomer.Entity;
			}
			set
			{
				tblCustomer previousValue = this._tblCustomer.Entity;
				if (((previousValue != value) 
							|| (this._tblCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCustomer.Entity = null;
						previousValue.tblBookAdvances.Remove(this);
					}
					this._tblCustomer.Entity = value;
					if ((value != null))
					{
						value.tblBookAdvances.Add(this);
						this._FK_iCustomerID = value.PK_iCustomerID;
					}
					else
					{
						this._FK_iCustomerID = default(int);
					}
					this.SendPropertyChanged("tblCustomer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStaff_tblBookAdvance", Storage="_tblStaff", ThisKey="FK_iStaffID", OtherKey="PK_iStaffID", IsForeignKey=true)]
		public tblStaff tblStaff
		{
			get
			{
				return this._tblStaff.Entity;
			}
			set
			{
				tblStaff previousValue = this._tblStaff.Entity;
				if (((previousValue != value) 
							|| (this._tblStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblStaff.Entity = null;
						previousValue.tblBookAdvances.Remove(this);
					}
					this._tblStaff.Entity = value;
					if ((value != null))
					{
						value.tblBookAdvances.Add(this);
						this._FK_iStaffID = value.PK_iStaffID;
					}
					else
					{
						this._FK_iStaffID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblStaff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStore_tblBookAdvance", Storage="_tblStore", ThisKey="FK_iStoreID", OtherKey="PK_iStoreID", IsForeignKey=true)]
		public tblStore tblStore
		{
			get
			{
				return this._tblStore.Entity;
			}
			set
			{
				tblStore previousValue = this._tblStore.Entity;
				if (((previousValue != value) 
							|| (this._tblStore.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblStore.Entity = null;
						previousValue.tblBookAdvances.Remove(this);
					}
					this._tblStore.Entity = value;
					if ((value != null))
					{
						value.tblBookAdvances.Add(this);
						this._FK_iStoreID = value.PK_iStoreID;
					}
					else
					{
						this._FK_iStoreID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblStore");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblDetailBookAdvances(tblDetailBookAdvance entity)
		{
			this.SendPropertyChanging();
			entity.tblBookAdvance = this;
		}
		
		private void detach_tblDetailBookAdvances(tblDetailBookAdvance entity)
		{
			this.SendPropertyChanging();
			entity.tblBookAdvance = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblTypeService")]
	public partial class tblTypeService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PK_sTypeServiceID;
		
		private string _sNameTypeService;
		
		private string _sDesciption;
		
		private EntitySet<tblService> _tblServices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_sTypeServiceIDChanging(string value);
    partial void OnPK_sTypeServiceIDChanged();
    partial void OnsNameTypeServiceChanging(string value);
    partial void OnsNameTypeServiceChanged();
    partial void OnsDesciptionChanging(string value);
    partial void OnsDesciptionChanged();
    #endregion
		
		public tblTypeService()
		{
			this._tblServices = new EntitySet<tblService>(new Action<tblService>(this.attach_tblServices), new Action<tblService>(this.detach_tblServices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_sTypeServiceID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PK_sTypeServiceID
		{
			get
			{
				return this._PK_sTypeServiceID;
			}
			set
			{
				if ((this._PK_sTypeServiceID != value))
				{
					this.OnPK_sTypeServiceIDChanging(value);
					this.SendPropertyChanging();
					this._PK_sTypeServiceID = value;
					this.SendPropertyChanged("PK_sTypeServiceID");
					this.OnPK_sTypeServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sNameTypeService", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string sNameTypeService
		{
			get
			{
				return this._sNameTypeService;
			}
			set
			{
				if ((this._sNameTypeService != value))
				{
					this.OnsNameTypeServiceChanging(value);
					this.SendPropertyChanging();
					this._sNameTypeService = value;
					this.SendPropertyChanged("sNameTypeService");
					this.OnsNameTypeServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDesciption", DbType="NVarChar(300)")]
		public string sDesciption
		{
			get
			{
				return this._sDesciption;
			}
			set
			{
				if ((this._sDesciption != value))
				{
					this.OnsDesciptionChanging(value);
					this.SendPropertyChanging();
					this._sDesciption = value;
					this.SendPropertyChanged("sDesciption");
					this.OnsDesciptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblTypeService_tblService", Storage="_tblServices", ThisKey="PK_sTypeServiceID", OtherKey="FK_sTypeServiceID")]
		public EntitySet<tblService> tblServices
		{
			get
			{
				return this._tblServices;
			}
			set
			{
				this._tblServices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblServices(tblService entity)
		{
			this.SendPropertyChanging();
			entity.tblTypeService = this;
		}
		
		private void detach_tblServices(tblService entity)
		{
			this.SendPropertyChanging();
			entity.tblTypeService = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCart")]
	public partial class tblCart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_iCartID;
		
		private int _FK_iCustomID;
		
		private EntitySet<tblCartDetail> _tblCartDetails;
		
		private EntityRef<tblCustomer> _tblCustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_iCartIDChanging(int value);
    partial void OnPK_iCartIDChanged();
    partial void OnFK_iCustomIDChanging(int value);
    partial void OnFK_iCustomIDChanged();
    #endregion
		
		public tblCart()
		{
			this._tblCartDetails = new EntitySet<tblCartDetail>(new Action<tblCartDetail>(this.attach_tblCartDetails), new Action<tblCartDetail>(this.detach_tblCartDetails));
			this._tblCustomer = default(EntityRef<tblCustomer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_iCartID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_iCartID
		{
			get
			{
				return this._PK_iCartID;
			}
			set
			{
				if ((this._PK_iCartID != value))
				{
					this.OnPK_iCartIDChanging(value);
					this.SendPropertyChanging();
					this._PK_iCartID = value;
					this.SendPropertyChanged("PK_iCartID");
					this.OnPK_iCartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_iCustomID", DbType="Int NOT NULL")]
		public int FK_iCustomID
		{
			get
			{
				return this._FK_iCustomID;
			}
			set
			{
				if ((this._FK_iCustomID != value))
				{
					if (this._tblCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_iCustomIDChanging(value);
					this.SendPropertyChanging();
					this._FK_iCustomID = value;
					this.SendPropertyChanged("FK_iCustomID");
					this.OnFK_iCustomIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCart_tblCartDetail", Storage="_tblCartDetails", ThisKey="PK_iCartID", OtherKey="FK_iCartID")]
		public EntitySet<tblCartDetail> tblCartDetails
		{
			get
			{
				return this._tblCartDetails;
			}
			set
			{
				this._tblCartDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCustomer_tblCart", Storage="_tblCustomer", ThisKey="FK_iCustomID", OtherKey="PK_iCustomerID", IsForeignKey=true)]
		public tblCustomer tblCustomer
		{
			get
			{
				return this._tblCustomer.Entity;
			}
			set
			{
				tblCustomer previousValue = this._tblCustomer.Entity;
				if (((previousValue != value) 
							|| (this._tblCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCustomer.Entity = null;
						previousValue.tblCarts.Remove(this);
					}
					this._tblCustomer.Entity = value;
					if ((value != null))
					{
						value.tblCarts.Add(this);
						this._FK_iCustomID = value.PK_iCustomerID;
					}
					else
					{
						this._FK_iCustomID = default(int);
					}
					this.SendPropertyChanged("tblCustomer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblCartDetails(tblCartDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblCart = this;
		}
		
		private void detach_tblCartDetails(tblCartDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblCart = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCartDetail")]
	public partial class tblCartDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_iCartDetailID;
		
		private int _FK_iCartID;
		
		private int _FK_iProductID;
		
		private System.Nullable<System.DateTime> _dDateAddCart;
		
		private int _iQuantity;
		
		private EntityRef<tblCart> _tblCart;
		
		private EntityRef<tblProduct> _tblProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_iCartDetailIDChanging(int value);
    partial void OnPK_iCartDetailIDChanged();
    partial void OnFK_iCartIDChanging(int value);
    partial void OnFK_iCartIDChanged();
    partial void OnFK_iProductIDChanging(int value);
    partial void OnFK_iProductIDChanged();
    partial void OndDateAddCartChanging(System.Nullable<System.DateTime> value);
    partial void OndDateAddCartChanged();
    partial void OniQuantityChanging(int value);
    partial void OniQuantityChanged();
    #endregion
		
		public tblCartDetail()
		{
			this._tblCart = default(EntityRef<tblCart>);
			this._tblProduct = default(EntityRef<tblProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_iCartDetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_iCartDetailID
		{
			get
			{
				return this._PK_iCartDetailID;
			}
			set
			{
				if ((this._PK_iCartDetailID != value))
				{
					this.OnPK_iCartDetailIDChanging(value);
					this.SendPropertyChanging();
					this._PK_iCartDetailID = value;
					this.SendPropertyChanged("PK_iCartDetailID");
					this.OnPK_iCartDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_iCartID", DbType="Int NOT NULL")]
		public int FK_iCartID
		{
			get
			{
				return this._FK_iCartID;
			}
			set
			{
				if ((this._FK_iCartID != value))
				{
					if (this._tblCart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_iCartIDChanging(value);
					this.SendPropertyChanging();
					this._FK_iCartID = value;
					this.SendPropertyChanged("FK_iCartID");
					this.OnFK_iCartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_iProductID", DbType="Int NOT NULL")]
		public int FK_iProductID
		{
			get
			{
				return this._FK_iProductID;
			}
			set
			{
				if ((this._FK_iProductID != value))
				{
					if (this._tblProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_iProductIDChanging(value);
					this.SendPropertyChanging();
					this._FK_iProductID = value;
					this.SendPropertyChanged("FK_iProductID");
					this.OnFK_iProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dDateAddCart", DbType="Date")]
		public System.Nullable<System.DateTime> dDateAddCart
		{
			get
			{
				return this._dDateAddCart;
			}
			set
			{
				if ((this._dDateAddCart != value))
				{
					this.OndDateAddCartChanging(value);
					this.SendPropertyChanging();
					this._dDateAddCart = value;
					this.SendPropertyChanged("dDateAddCart");
					this.OndDateAddCartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iQuantity", DbType="Int NOT NULL")]
		public int iQuantity
		{
			get
			{
				return this._iQuantity;
			}
			set
			{
				if ((this._iQuantity != value))
				{
					this.OniQuantityChanging(value);
					this.SendPropertyChanging();
					this._iQuantity = value;
					this.SendPropertyChanged("iQuantity");
					this.OniQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCart_tblCartDetail", Storage="_tblCart", ThisKey="FK_iCartID", OtherKey="PK_iCartID", IsForeignKey=true)]
		public tblCart tblCart
		{
			get
			{
				return this._tblCart.Entity;
			}
			set
			{
				tblCart previousValue = this._tblCart.Entity;
				if (((previousValue != value) 
							|| (this._tblCart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCart.Entity = null;
						previousValue.tblCartDetails.Remove(this);
					}
					this._tblCart.Entity = value;
					if ((value != null))
					{
						value.tblCartDetails.Add(this);
						this._FK_iCartID = value.PK_iCartID;
					}
					else
					{
						this._FK_iCartID = default(int);
					}
					this.SendPropertyChanged("tblCart");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProduct_tblCartDetail", Storage="_tblProduct", ThisKey="FK_iProductID", OtherKey="PK_iProductID", IsForeignKey=true)]
		public tblProduct tblProduct
		{
			get
			{
				return this._tblProduct.Entity;
			}
			set
			{
				tblProduct previousValue = this._tblProduct.Entity;
				if (((previousValue != value) 
							|| (this._tblProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblProduct.Entity = null;
						previousValue.tblCartDetails.Remove(this);
					}
					this._tblProduct.Entity = value;
					if ((value != null))
					{
						value.tblCartDetails.Add(this);
						this._FK_iProductID = value.PK_iProductID;
					}
					else
					{
						this._FK_iProductID = default(int);
					}
					this.SendPropertyChanged("tblProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCategoryPost")]
	public partial class tblCategoryPost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PK_sCategoryPostID;
		
		private string _FK_sGroupPostID;
		
		private string _sCategoryName;
		
		private string _sDescription;
		
		private EntitySet<tblPost> _tblPosts;
		
		private EntityRef<tblGroupPost> _tblGroupPost;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_sCategoryPostIDChanging(string value);
    partial void OnPK_sCategoryPostIDChanged();
    partial void OnFK_sGroupPostIDChanging(string value);
    partial void OnFK_sGroupPostIDChanged();
    partial void OnsCategoryNameChanging(string value);
    partial void OnsCategoryNameChanged();
    partial void OnsDescriptionChanging(string value);
    partial void OnsDescriptionChanged();
    #endregion
		
		public tblCategoryPost()
		{
			this._tblPosts = new EntitySet<tblPost>(new Action<tblPost>(this.attach_tblPosts), new Action<tblPost>(this.detach_tblPosts));
			this._tblGroupPost = default(EntityRef<tblGroupPost>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_sCategoryPostID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PK_sCategoryPostID
		{
			get
			{
				return this._PK_sCategoryPostID;
			}
			set
			{
				if ((this._PK_sCategoryPostID != value))
				{
					this.OnPK_sCategoryPostIDChanging(value);
					this.SendPropertyChanging();
					this._PK_sCategoryPostID = value;
					this.SendPropertyChanged("PK_sCategoryPostID");
					this.OnPK_sCategoryPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_sGroupPostID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FK_sGroupPostID
		{
			get
			{
				return this._FK_sGroupPostID;
			}
			set
			{
				if ((this._FK_sGroupPostID != value))
				{
					if (this._tblGroupPost.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_sGroupPostIDChanging(value);
					this.SendPropertyChanging();
					this._FK_sGroupPostID = value;
					this.SendPropertyChanged("FK_sGroupPostID");
					this.OnFK_sGroupPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sCategoryName", DbType="NVarChar(100)")]
		public string sCategoryName
		{
			get
			{
				return this._sCategoryName;
			}
			set
			{
				if ((this._sCategoryName != value))
				{
					this.OnsCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._sCategoryName = value;
					this.SendPropertyChanged("sCategoryName");
					this.OnsCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDescription", DbType="NVarChar(300)")]
		public string sDescription
		{
			get
			{
				return this._sDescription;
			}
			set
			{
				if ((this._sDescription != value))
				{
					this.OnsDescriptionChanging(value);
					this.SendPropertyChanging();
					this._sDescription = value;
					this.SendPropertyChanged("sDescription");
					this.OnsDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCategoryPost_tblPost", Storage="_tblPosts", ThisKey="PK_sCategoryPostID", OtherKey="FK_sCategoryPostID")]
		public EntitySet<tblPost> tblPosts
		{
			get
			{
				return this._tblPosts;
			}
			set
			{
				this._tblPosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblGroupPost_tblCategoryPost", Storage="_tblGroupPost", ThisKey="FK_sGroupPostID", OtherKey="PK_sGroupPostID", IsForeignKey=true)]
		public tblGroupPost tblGroupPost
		{
			get
			{
				return this._tblGroupPost.Entity;
			}
			set
			{
				tblGroupPost previousValue = this._tblGroupPost.Entity;
				if (((previousValue != value) 
							|| (this._tblGroupPost.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblGroupPost.Entity = null;
						previousValue.tblCategoryPosts.Remove(this);
					}
					this._tblGroupPost.Entity = value;
					if ((value != null))
					{
						value.tblCategoryPosts.Add(this);
						this._FK_sGroupPostID = value.PK_sGroupPostID;
					}
					else
					{
						this._FK_sGroupPostID = default(string);
					}
					this.SendPropertyChanged("tblGroupPost");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblPosts(tblPost entity)
		{
			this.SendPropertyChanging();
			entity.tblCategoryPost = this;
		}
		
		private void detach_tblPosts(tblPost entity)
		{
			this.SendPropertyChanging();
			entity.tblCategoryPost = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCategoryProduct")]
	public partial class tblCategoryProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PK_sCategoryProductID;
		
		private string _FK_sGroupProductID;
		
		private string _sCategoryName;
		
		private string _sDescription;
		
		private EntitySet<tblProduct> _tblProducts;
		
		private EntityRef<tblGroupProduct> _tblGroupProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_sCategoryProductIDChanging(string value);
    partial void OnPK_sCategoryProductIDChanged();
    partial void OnFK_sGroupProductIDChanging(string value);
    partial void OnFK_sGroupProductIDChanged();
    partial void OnsCategoryNameChanging(string value);
    partial void OnsCategoryNameChanged();
    partial void OnsDescriptionChanging(string value);
    partial void OnsDescriptionChanged();
    #endregion
		
		public tblCategoryProduct()
		{
			this._tblProducts = new EntitySet<tblProduct>(new Action<tblProduct>(this.attach_tblProducts), new Action<tblProduct>(this.detach_tblProducts));
			this._tblGroupProduct = default(EntityRef<tblGroupProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_sCategoryProductID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PK_sCategoryProductID
		{
			get
			{
				return this._PK_sCategoryProductID;
			}
			set
			{
				if ((this._PK_sCategoryProductID != value))
				{
					this.OnPK_sCategoryProductIDChanging(value);
					this.SendPropertyChanging();
					this._PK_sCategoryProductID = value;
					this.SendPropertyChanged("PK_sCategoryProductID");
					this.OnPK_sCategoryProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_sGroupProductID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FK_sGroupProductID
		{
			get
			{
				return this._FK_sGroupProductID;
			}
			set
			{
				if ((this._FK_sGroupProductID != value))
				{
					if (this._tblGroupProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_sGroupProductIDChanging(value);
					this.SendPropertyChanging();
					this._FK_sGroupProductID = value;
					this.SendPropertyChanged("FK_sGroupProductID");
					this.OnFK_sGroupProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sCategoryName", DbType="NVarChar(100)")]
		public string sCategoryName
		{
			get
			{
				return this._sCategoryName;
			}
			set
			{
				if ((this._sCategoryName != value))
				{
					this.OnsCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._sCategoryName = value;
					this.SendPropertyChanged("sCategoryName");
					this.OnsCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDescription", DbType="NVarChar(300)")]
		public string sDescription
		{
			get
			{
				return this._sDescription;
			}
			set
			{
				if ((this._sDescription != value))
				{
					this.OnsDescriptionChanging(value);
					this.SendPropertyChanging();
					this._sDescription = value;
					this.SendPropertyChanged("sDescription");
					this.OnsDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCategoryProduct_tblProduct", Storage="_tblProducts", ThisKey="PK_sCategoryProductID", OtherKey="FK_sCategoryProductID")]
		public EntitySet<tblProduct> tblProducts
		{
			get
			{
				return this._tblProducts;
			}
			set
			{
				this._tblProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblGroupProduct_tblCategoryProduct", Storage="_tblGroupProduct", ThisKey="FK_sGroupProductID", OtherKey="PK_sGroupProductID", IsForeignKey=true)]
		public tblGroupProduct tblGroupProduct
		{
			get
			{
				return this._tblGroupProduct.Entity;
			}
			set
			{
				tblGroupProduct previousValue = this._tblGroupProduct.Entity;
				if (((previousValue != value) 
							|| (this._tblGroupProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblGroupProduct.Entity = null;
						previousValue.tblCategoryProducts.Remove(this);
					}
					this._tblGroupProduct.Entity = value;
					if ((value != null))
					{
						value.tblCategoryProducts.Add(this);
						this._FK_sGroupProductID = value.PK_sGroupProductID;
					}
					else
					{
						this._FK_sGroupProductID = default(string);
					}
					this.SendPropertyChanged("tblGroupProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblProducts(tblProduct entity)
		{
			this.SendPropertyChanging();
			entity.tblCategoryProduct = this;
		}
		
		private void detach_tblProducts(tblProduct entity)
		{
			this.SendPropertyChanging();
			entity.tblCategoryProduct = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCustomer")]
	public partial class tblCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_iCustomerID;
		
		private string _sNameCustomer;
		
		private string _sPhoneNumber;
		
		private string _sGmail;
		
		private string _sAddress;
		
		private System.Nullable<System.DateTime> _dBrithDay;
		
		private string _sPassword;
		
		private System.Nullable<int> _iCoin;
		
		private System.Nullable<bool> _sSex;
		
		private System.Nullable<bool> _sStatus;
		
		private EntitySet<tblBookAdvance> _tblBookAdvances;
		
		private EntitySet<tblCart> _tblCarts;
		
		private EntitySet<tblOrderProduct> _tblOrderProducts;
		
		private EntitySet<tblReceipt> _tblReceipts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_iCustomerIDChanging(int value);
    partial void OnPK_iCustomerIDChanged();
    partial void OnsNameCustomerChanging(string value);
    partial void OnsNameCustomerChanged();
    partial void OnsPhoneNumberChanging(string value);
    partial void OnsPhoneNumberChanged();
    partial void OnsGmailChanging(string value);
    partial void OnsGmailChanged();
    partial void OnsAddressChanging(string value);
    partial void OnsAddressChanged();
    partial void OndBrithDayChanging(System.Nullable<System.DateTime> value);
    partial void OndBrithDayChanged();
    partial void OnsPasswordChanging(string value);
    partial void OnsPasswordChanged();
    partial void OniCoinChanging(System.Nullable<int> value);
    partial void OniCoinChanged();
    partial void OnsSexChanging(System.Nullable<bool> value);
    partial void OnsSexChanged();
    partial void OnsStatusChanging(System.Nullable<bool> value);
    partial void OnsStatusChanged();
    #endregion
		
		public tblCustomer()
		{
			this._tblBookAdvances = new EntitySet<tblBookAdvance>(new Action<tblBookAdvance>(this.attach_tblBookAdvances), new Action<tblBookAdvance>(this.detach_tblBookAdvances));
			this._tblCarts = new EntitySet<tblCart>(new Action<tblCart>(this.attach_tblCarts), new Action<tblCart>(this.detach_tblCarts));
			this._tblOrderProducts = new EntitySet<tblOrderProduct>(new Action<tblOrderProduct>(this.attach_tblOrderProducts), new Action<tblOrderProduct>(this.detach_tblOrderProducts));
			this._tblReceipts = new EntitySet<tblReceipt>(new Action<tblReceipt>(this.attach_tblReceipts), new Action<tblReceipt>(this.detach_tblReceipts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_iCustomerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_iCustomerID
		{
			get
			{
				return this._PK_iCustomerID;
			}
			set
			{
				if ((this._PK_iCustomerID != value))
				{
					this.OnPK_iCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._PK_iCustomerID = value;
					this.SendPropertyChanged("PK_iCustomerID");
					this.OnPK_iCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sNameCustomer", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string sNameCustomer
		{
			get
			{
				return this._sNameCustomer;
			}
			set
			{
				if ((this._sNameCustomer != value))
				{
					this.OnsNameCustomerChanging(value);
					this.SendPropertyChanging();
					this._sNameCustomer = value;
					this.SendPropertyChanged("sNameCustomer");
					this.OnsNameCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sPhoneNumber", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string sPhoneNumber
		{
			get
			{
				return this._sPhoneNumber;
			}
			set
			{
				if ((this._sPhoneNumber != value))
				{
					this.OnsPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._sPhoneNumber = value;
					this.SendPropertyChanged("sPhoneNumber");
					this.OnsPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sGmail", DbType="NVarChar(50)")]
		public string sGmail
		{
			get
			{
				return this._sGmail;
			}
			set
			{
				if ((this._sGmail != value))
				{
					this.OnsGmailChanging(value);
					this.SendPropertyChanging();
					this._sGmail = value;
					this.SendPropertyChanged("sGmail");
					this.OnsGmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAddress", DbType="NVarChar(50)")]
		public string sAddress
		{
			get
			{
				return this._sAddress;
			}
			set
			{
				if ((this._sAddress != value))
				{
					this.OnsAddressChanging(value);
					this.SendPropertyChanging();
					this._sAddress = value;
					this.SendPropertyChanged("sAddress");
					this.OnsAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dBrithDay", DbType="Date")]
		public System.Nullable<System.DateTime> dBrithDay
		{
			get
			{
				return this._dBrithDay;
			}
			set
			{
				if ((this._dBrithDay != value))
				{
					this.OndBrithDayChanging(value);
					this.SendPropertyChanging();
					this._dBrithDay = value;
					this.SendPropertyChanged("dBrithDay");
					this.OndBrithDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sPassword", DbType="VarChar(50)")]
		public string sPassword
		{
			get
			{
				return this._sPassword;
			}
			set
			{
				if ((this._sPassword != value))
				{
					this.OnsPasswordChanging(value);
					this.SendPropertyChanging();
					this._sPassword = value;
					this.SendPropertyChanged("sPassword");
					this.OnsPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iCoin", DbType="Int")]
		public System.Nullable<int> iCoin
		{
			get
			{
				return this._iCoin;
			}
			set
			{
				if ((this._iCoin != value))
				{
					this.OniCoinChanging(value);
					this.SendPropertyChanging();
					this._iCoin = value;
					this.SendPropertyChanged("iCoin");
					this.OniCoinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sSex", DbType="Bit")]
		public System.Nullable<bool> sSex
		{
			get
			{
				return this._sSex;
			}
			set
			{
				if ((this._sSex != value))
				{
					this.OnsSexChanging(value);
					this.SendPropertyChanging();
					this._sSex = value;
					this.SendPropertyChanged("sSex");
					this.OnsSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sStatus", DbType="Bit")]
		public System.Nullable<bool> sStatus
		{
			get
			{
				return this._sStatus;
			}
			set
			{
				if ((this._sStatus != value))
				{
					this.OnsStatusChanging(value);
					this.SendPropertyChanging();
					this._sStatus = value;
					this.SendPropertyChanged("sStatus");
					this.OnsStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCustomer_tblBookAdvance", Storage="_tblBookAdvances", ThisKey="PK_iCustomerID", OtherKey="FK_iCustomerID")]
		public EntitySet<tblBookAdvance> tblBookAdvances
		{
			get
			{
				return this._tblBookAdvances;
			}
			set
			{
				this._tblBookAdvances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCustomer_tblCart", Storage="_tblCarts", ThisKey="PK_iCustomerID", OtherKey="FK_iCustomID")]
		public EntitySet<tblCart> tblCarts
		{
			get
			{
				return this._tblCarts;
			}
			set
			{
				this._tblCarts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCustomer_tblOrderProduct", Storage="_tblOrderProducts", ThisKey="PK_iCustomerID", OtherKey="FK_iCustomerID")]
		public EntitySet<tblOrderProduct> tblOrderProducts
		{
			get
			{
				return this._tblOrderProducts;
			}
			set
			{
				this._tblOrderProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCustomer_tblReceipt", Storage="_tblReceipts", ThisKey="PK_iCustomerID", OtherKey="FK_iCustomID")]
		public EntitySet<tblReceipt> tblReceipts
		{
			get
			{
				return this._tblReceipts;
			}
			set
			{
				this._tblReceipts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblBookAdvances(tblBookAdvance entity)
		{
			this.SendPropertyChanging();
			entity.tblCustomer = this;
		}
		
		private void detach_tblBookAdvances(tblBookAdvance entity)
		{
			this.SendPropertyChanging();
			entity.tblCustomer = null;
		}
		
		private void attach_tblCarts(tblCart entity)
		{
			this.SendPropertyChanging();
			entity.tblCustomer = this;
		}
		
		private void detach_tblCarts(tblCart entity)
		{
			this.SendPropertyChanging();
			entity.tblCustomer = null;
		}
		
		private void attach_tblOrderProducts(tblOrderProduct entity)
		{
			this.SendPropertyChanging();
			entity.tblCustomer = this;
		}
		
		private void detach_tblOrderProducts(tblOrderProduct entity)
		{
			this.SendPropertyChanging();
			entity.tblCustomer = null;
		}
		
		private void attach_tblReceipts(tblReceipt entity)
		{
			this.SendPropertyChanging();
			entity.tblCustomer = this;
		}
		
		private void detach_tblReceipts(tblReceipt entity)
		{
			this.SendPropertyChanging();
			entity.tblCustomer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDeatailOrder")]
	public partial class tblDeatailOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_iDetailOrderID;
		
		private int _FK_iOrderID;
		
		private int _FK_iProductID;
		
		private System.Nullable<int> _iSoLuong;
		
		private EntityRef<tblOrderProduct> _tblOrderProduct;
		
		private EntityRef<tblProduct> _tblProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_iDetailOrderIDChanging(int value);
    partial void OnPK_iDetailOrderIDChanged();
    partial void OnFK_iOrderIDChanging(int value);
    partial void OnFK_iOrderIDChanged();
    partial void OnFK_iProductIDChanging(int value);
    partial void OnFK_iProductIDChanged();
    partial void OniSoLuongChanging(System.Nullable<int> value);
    partial void OniSoLuongChanged();
    #endregion
		
		public tblDeatailOrder()
		{
			this._tblOrderProduct = default(EntityRef<tblOrderProduct>);
			this._tblProduct = default(EntityRef<tblProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_iDetailOrderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_iDetailOrderID
		{
			get
			{
				return this._PK_iDetailOrderID;
			}
			set
			{
				if ((this._PK_iDetailOrderID != value))
				{
					this.OnPK_iDetailOrderIDChanging(value);
					this.SendPropertyChanging();
					this._PK_iDetailOrderID = value;
					this.SendPropertyChanged("PK_iDetailOrderID");
					this.OnPK_iDetailOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_iOrderID", DbType="Int NOT NULL")]
		public int FK_iOrderID
		{
			get
			{
				return this._FK_iOrderID;
			}
			set
			{
				if ((this._FK_iOrderID != value))
				{
					if (this._tblOrderProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_iOrderIDChanging(value);
					this.SendPropertyChanging();
					this._FK_iOrderID = value;
					this.SendPropertyChanged("FK_iOrderID");
					this.OnFK_iOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_iProductID", DbType="Int NOT NULL")]
		public int FK_iProductID
		{
			get
			{
				return this._FK_iProductID;
			}
			set
			{
				if ((this._FK_iProductID != value))
				{
					if (this._tblProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_iProductIDChanging(value);
					this.SendPropertyChanging();
					this._FK_iProductID = value;
					this.SendPropertyChanged("FK_iProductID");
					this.OnFK_iProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iSoLuong", DbType="Int")]
		public System.Nullable<int> iSoLuong
		{
			get
			{
				return this._iSoLuong;
			}
			set
			{
				if ((this._iSoLuong != value))
				{
					this.OniSoLuongChanging(value);
					this.SendPropertyChanging();
					this._iSoLuong = value;
					this.SendPropertyChanged("iSoLuong");
					this.OniSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblOrderProduct_tblDeatailOrder", Storage="_tblOrderProduct", ThisKey="FK_iOrderID", OtherKey="PK_iOrderID", IsForeignKey=true)]
		public tblOrderProduct tblOrderProduct
		{
			get
			{
				return this._tblOrderProduct.Entity;
			}
			set
			{
				tblOrderProduct previousValue = this._tblOrderProduct.Entity;
				if (((previousValue != value) 
							|| (this._tblOrderProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblOrderProduct.Entity = null;
						previousValue.tblDeatailOrders.Remove(this);
					}
					this._tblOrderProduct.Entity = value;
					if ((value != null))
					{
						value.tblDeatailOrders.Add(this);
						this._FK_iOrderID = value.PK_iOrderID;
					}
					else
					{
						this._FK_iOrderID = default(int);
					}
					this.SendPropertyChanged("tblOrderProduct");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProduct_tblDeatailOrder", Storage="_tblProduct", ThisKey="FK_iProductID", OtherKey="PK_iProductID", IsForeignKey=true)]
		public tblProduct tblProduct
		{
			get
			{
				return this._tblProduct.Entity;
			}
			set
			{
				tblProduct previousValue = this._tblProduct.Entity;
				if (((previousValue != value) 
							|| (this._tblProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblProduct.Entity = null;
						previousValue.tblDeatailOrders.Remove(this);
					}
					this._tblProduct.Entity = value;
					if ((value != null))
					{
						value.tblDeatailOrders.Add(this);
						this._FK_iProductID = value.PK_iProductID;
					}
					else
					{
						this._FK_iProductID = default(int);
					}
					this.SendPropertyChanged("tblProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDetailBookAdvance")]
	public partial class tblDetailBookAdvance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_iDetailBookAdvanceID;
		
		private int _FK_iBookAdvanceID;
		
		private System.Nullable<int> _FK_iServiceID;
		
		private EntityRef<tblBookAdvance> _tblBookAdvance;
		
		private EntityRef<tblService> _tblService;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_iDetailBookAdvanceIDChanging(int value);
    partial void OnPK_iDetailBookAdvanceIDChanged();
    partial void OnFK_iBookAdvanceIDChanging(int value);
    partial void OnFK_iBookAdvanceIDChanged();
    partial void OnFK_iServiceIDChanging(System.Nullable<int> value);
    partial void OnFK_iServiceIDChanged();
    #endregion
		
		public tblDetailBookAdvance()
		{
			this._tblBookAdvance = default(EntityRef<tblBookAdvance>);
			this._tblService = default(EntityRef<tblService>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_iDetailBookAdvanceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_iDetailBookAdvanceID
		{
			get
			{
				return this._PK_iDetailBookAdvanceID;
			}
			set
			{
				if ((this._PK_iDetailBookAdvanceID != value))
				{
					this.OnPK_iDetailBookAdvanceIDChanging(value);
					this.SendPropertyChanging();
					this._PK_iDetailBookAdvanceID = value;
					this.SendPropertyChanged("PK_iDetailBookAdvanceID");
					this.OnPK_iDetailBookAdvanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_iBookAdvanceID", DbType="Int NOT NULL")]
		public int FK_iBookAdvanceID
		{
			get
			{
				return this._FK_iBookAdvanceID;
			}
			set
			{
				if ((this._FK_iBookAdvanceID != value))
				{
					if (this._tblBookAdvance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_iBookAdvanceIDChanging(value);
					this.SendPropertyChanging();
					this._FK_iBookAdvanceID = value;
					this.SendPropertyChanged("FK_iBookAdvanceID");
					this.OnFK_iBookAdvanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_iServiceID", DbType="Int")]
		public System.Nullable<int> FK_iServiceID
		{
			get
			{
				return this._FK_iServiceID;
			}
			set
			{
				if ((this._FK_iServiceID != value))
				{
					if (this._tblService.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_iServiceIDChanging(value);
					this.SendPropertyChanging();
					this._FK_iServiceID = value;
					this.SendPropertyChanged("FK_iServiceID");
					this.OnFK_iServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblBookAdvance_tblDetailBookAdvance", Storage="_tblBookAdvance", ThisKey="FK_iBookAdvanceID", OtherKey="PK_iBookAdvanceID", IsForeignKey=true)]
		public tblBookAdvance tblBookAdvance
		{
			get
			{
				return this._tblBookAdvance.Entity;
			}
			set
			{
				tblBookAdvance previousValue = this._tblBookAdvance.Entity;
				if (((previousValue != value) 
							|| (this._tblBookAdvance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblBookAdvance.Entity = null;
						previousValue.tblDetailBookAdvances.Remove(this);
					}
					this._tblBookAdvance.Entity = value;
					if ((value != null))
					{
						value.tblDetailBookAdvances.Add(this);
						this._FK_iBookAdvanceID = value.PK_iBookAdvanceID;
					}
					else
					{
						this._FK_iBookAdvanceID = default(int);
					}
					this.SendPropertyChanged("tblBookAdvance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblService_tblDetailBookAdvance", Storage="_tblService", ThisKey="FK_iServiceID", OtherKey="PK_iServiceID", IsForeignKey=true)]
		public tblService tblService
		{
			get
			{
				return this._tblService.Entity;
			}
			set
			{
				tblService previousValue = this._tblService.Entity;
				if (((previousValue != value) 
							|| (this._tblService.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblService.Entity = null;
						previousValue.tblDetailBookAdvances.Remove(this);
					}
					this._tblService.Entity = value;
					if ((value != null))
					{
						value.tblDetailBookAdvances.Add(this);
						this._FK_iServiceID = value.PK_iServiceID;
					}
					else
					{
						this._FK_iServiceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblService");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDiscount")]
	public partial class tblDiscount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PK_sDiscountID;
		
		private string _sNameDiscount;
		
		private double _fRatioDiscount;
		
		private System.Nullable<System.DateTime> _dStartDiscount;
		
		private System.Nullable<System.DateTime> _dEndDiscount;
		
		private string _sDescription;
		
		private System.Nullable<bool> _bStatus;
		
		private EntitySet<tblProduct> _tblProducts;
		
		private EntitySet<tblService> _tblServices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_sDiscountIDChanging(string value);
    partial void OnPK_sDiscountIDChanged();
    partial void OnsNameDiscountChanging(string value);
    partial void OnsNameDiscountChanged();
    partial void OnfRatioDiscountChanging(double value);
    partial void OnfRatioDiscountChanged();
    partial void OndStartDiscountChanging(System.Nullable<System.DateTime> value);
    partial void OndStartDiscountChanged();
    partial void OndEndDiscountChanging(System.Nullable<System.DateTime> value);
    partial void OndEndDiscountChanged();
    partial void OnsDescriptionChanging(string value);
    partial void OnsDescriptionChanged();
    partial void OnbStatusChanging(System.Nullable<bool> value);
    partial void OnbStatusChanged();
    #endregion
		
		public tblDiscount()
		{
			this._tblProducts = new EntitySet<tblProduct>(new Action<tblProduct>(this.attach_tblProducts), new Action<tblProduct>(this.detach_tblProducts));
			this._tblServices = new EntitySet<tblService>(new Action<tblService>(this.attach_tblServices), new Action<tblService>(this.detach_tblServices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_sDiscountID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PK_sDiscountID
		{
			get
			{
				return this._PK_sDiscountID;
			}
			set
			{
				if ((this._PK_sDiscountID != value))
				{
					this.OnPK_sDiscountIDChanging(value);
					this.SendPropertyChanging();
					this._PK_sDiscountID = value;
					this.SendPropertyChanged("PK_sDiscountID");
					this.OnPK_sDiscountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sNameDiscount", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string sNameDiscount
		{
			get
			{
				return this._sNameDiscount;
			}
			set
			{
				if ((this._sNameDiscount != value))
				{
					this.OnsNameDiscountChanging(value);
					this.SendPropertyChanging();
					this._sNameDiscount = value;
					this.SendPropertyChanged("sNameDiscount");
					this.OnsNameDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fRatioDiscount", DbType="Float NOT NULL")]
		public double fRatioDiscount
		{
			get
			{
				return this._fRatioDiscount;
			}
			set
			{
				if ((this._fRatioDiscount != value))
				{
					this.OnfRatioDiscountChanging(value);
					this.SendPropertyChanging();
					this._fRatioDiscount = value;
					this.SendPropertyChanged("fRatioDiscount");
					this.OnfRatioDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dStartDiscount", DbType="Date")]
		public System.Nullable<System.DateTime> dStartDiscount
		{
			get
			{
				return this._dStartDiscount;
			}
			set
			{
				if ((this._dStartDiscount != value))
				{
					this.OndStartDiscountChanging(value);
					this.SendPropertyChanging();
					this._dStartDiscount = value;
					this.SendPropertyChanged("dStartDiscount");
					this.OndStartDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dEndDiscount", DbType="Date")]
		public System.Nullable<System.DateTime> dEndDiscount
		{
			get
			{
				return this._dEndDiscount;
			}
			set
			{
				if ((this._dEndDiscount != value))
				{
					this.OndEndDiscountChanging(value);
					this.SendPropertyChanging();
					this._dEndDiscount = value;
					this.SendPropertyChanged("dEndDiscount");
					this.OndEndDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDescription", DbType="NVarChar(200)")]
		public string sDescription
		{
			get
			{
				return this._sDescription;
			}
			set
			{
				if ((this._sDescription != value))
				{
					this.OnsDescriptionChanging(value);
					this.SendPropertyChanging();
					this._sDescription = value;
					this.SendPropertyChanged("sDescription");
					this.OnsDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bStatus", DbType="Bit")]
		public System.Nullable<bool> bStatus
		{
			get
			{
				return this._bStatus;
			}
			set
			{
				if ((this._bStatus != value))
				{
					this.OnbStatusChanging(value);
					this.SendPropertyChanging();
					this._bStatus = value;
					this.SendPropertyChanged("bStatus");
					this.OnbStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDiscount_tblProduct", Storage="_tblProducts", ThisKey="PK_sDiscountID", OtherKey="FK_sDiscountID")]
		public EntitySet<tblProduct> tblProducts
		{
			get
			{
				return this._tblProducts;
			}
			set
			{
				this._tblProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDiscount_tblService", Storage="_tblServices", ThisKey="PK_sDiscountID", OtherKey="FK_sDiscountID")]
		public EntitySet<tblService> tblServices
		{
			get
			{
				return this._tblServices;
			}
			set
			{
				this._tblServices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblProducts(tblProduct entity)
		{
			this.SendPropertyChanging();
			entity.tblDiscount = this;
		}
		
		private void detach_tblProducts(tblProduct entity)
		{
			this.SendPropertyChanging();
			entity.tblDiscount = null;
		}
		
		private void attach_tblServices(tblService entity)
		{
			this.SendPropertyChanging();
			entity.tblDiscount = this;
		}
		
		private void detach_tblServices(tblService entity)
		{
			this.SendPropertyChanging();
			entity.tblDiscount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblGroupPosts")]
	public partial class tblGroupPost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PK_sGroupPostID;
		
		private string _sGroupName;
		
		private string _sDescription;
		
		private EntitySet<tblCategoryPost> _tblCategoryPosts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_sGroupPostIDChanging(string value);
    partial void OnPK_sGroupPostIDChanged();
    partial void OnsGroupNameChanging(string value);
    partial void OnsGroupNameChanged();
    partial void OnsDescriptionChanging(string value);
    partial void OnsDescriptionChanged();
    #endregion
		
		public tblGroupPost()
		{
			this._tblCategoryPosts = new EntitySet<tblCategoryPost>(new Action<tblCategoryPost>(this.attach_tblCategoryPosts), new Action<tblCategoryPost>(this.detach_tblCategoryPosts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_sGroupPostID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PK_sGroupPostID
		{
			get
			{
				return this._PK_sGroupPostID;
			}
			set
			{
				if ((this._PK_sGroupPostID != value))
				{
					this.OnPK_sGroupPostIDChanging(value);
					this.SendPropertyChanging();
					this._PK_sGroupPostID = value;
					this.SendPropertyChanged("PK_sGroupPostID");
					this.OnPK_sGroupPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sGroupName", DbType="NVarChar(300)")]
		public string sGroupName
		{
			get
			{
				return this._sGroupName;
			}
			set
			{
				if ((this._sGroupName != value))
				{
					this.OnsGroupNameChanging(value);
					this.SendPropertyChanging();
					this._sGroupName = value;
					this.SendPropertyChanged("sGroupName");
					this.OnsGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDescription", DbType="NVarChar(500)")]
		public string sDescription
		{
			get
			{
				return this._sDescription;
			}
			set
			{
				if ((this._sDescription != value))
				{
					this.OnsDescriptionChanging(value);
					this.SendPropertyChanging();
					this._sDescription = value;
					this.SendPropertyChanged("sDescription");
					this.OnsDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblGroupPost_tblCategoryPost", Storage="_tblCategoryPosts", ThisKey="PK_sGroupPostID", OtherKey="FK_sGroupPostID")]
		public EntitySet<tblCategoryPost> tblCategoryPosts
		{
			get
			{
				return this._tblCategoryPosts;
			}
			set
			{
				this._tblCategoryPosts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblCategoryPosts(tblCategoryPost entity)
		{
			this.SendPropertyChanging();
			entity.tblGroupPost = this;
		}
		
		private void detach_tblCategoryPosts(tblCategoryPost entity)
		{
			this.SendPropertyChanging();
			entity.tblGroupPost = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblGroupProduct")]
	public partial class tblGroupProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PK_sGroupProductID;
		
		private string _sGroupName;
		
		private string _sDescription;
		
		private EntitySet<tblCategoryProduct> _tblCategoryProducts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_sGroupProductIDChanging(string value);
    partial void OnPK_sGroupProductIDChanged();
    partial void OnsGroupNameChanging(string value);
    partial void OnsGroupNameChanged();
    partial void OnsDescriptionChanging(string value);
    partial void OnsDescriptionChanged();
    #endregion
		
		public tblGroupProduct()
		{
			this._tblCategoryProducts = new EntitySet<tblCategoryProduct>(new Action<tblCategoryProduct>(this.attach_tblCategoryProducts), new Action<tblCategoryProduct>(this.detach_tblCategoryProducts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_sGroupProductID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PK_sGroupProductID
		{
			get
			{
				return this._PK_sGroupProductID;
			}
			set
			{
				if ((this._PK_sGroupProductID != value))
				{
					this.OnPK_sGroupProductIDChanging(value);
					this.SendPropertyChanging();
					this._PK_sGroupProductID = value;
					this.SendPropertyChanged("PK_sGroupProductID");
					this.OnPK_sGroupProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sGroupName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string sGroupName
		{
			get
			{
				return this._sGroupName;
			}
			set
			{
				if ((this._sGroupName != value))
				{
					this.OnsGroupNameChanging(value);
					this.SendPropertyChanging();
					this._sGroupName = value;
					this.SendPropertyChanged("sGroupName");
					this.OnsGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDescription", DbType="NVarChar(500)")]
		public string sDescription
		{
			get
			{
				return this._sDescription;
			}
			set
			{
				if ((this._sDescription != value))
				{
					this.OnsDescriptionChanging(value);
					this.SendPropertyChanging();
					this._sDescription = value;
					this.SendPropertyChanged("sDescription");
					this.OnsDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblGroupProduct_tblCategoryProduct", Storage="_tblCategoryProducts", ThisKey="PK_sGroupProductID", OtherKey="FK_sGroupProductID")]
		public EntitySet<tblCategoryProduct> tblCategoryProducts
		{
			get
			{
				return this._tblCategoryProducts;
			}
			set
			{
				this._tblCategoryProducts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblCategoryProducts(tblCategoryProduct entity)
		{
			this.SendPropertyChanging();
			entity.tblGroupProduct = this;
		}
		
		private void detach_tblCategoryProducts(tblCategoryProduct entity)
		{
			this.SendPropertyChanging();
			entity.tblGroupProduct = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblImage")]
	public partial class tblImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_iImageID;
		
		private System.Nullable<int> _FK_iProductID;
		
		private System.Nullable<int> _FK_iServiceID;
		
		private System.Nullable<int> _FK_iPostID;
		
		private System.Nullable<int> _FK_iComboServiceID;
		
		private string _sImage;
		
		private EntityRef<tblPost> _tblPost;
		
		private EntityRef<tblProduct> _tblProduct;
		
		private EntityRef<tblService> _tblService;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_iImageIDChanging(int value);
    partial void OnPK_iImageIDChanged();
    partial void OnFK_iProductIDChanging(System.Nullable<int> value);
    partial void OnFK_iProductIDChanged();
    partial void OnFK_iServiceIDChanging(System.Nullable<int> value);
    partial void OnFK_iServiceIDChanged();
    partial void OnFK_iPostIDChanging(System.Nullable<int> value);
    partial void OnFK_iPostIDChanged();
    partial void OnFK_iComboServiceIDChanging(System.Nullable<int> value);
    partial void OnFK_iComboServiceIDChanged();
    partial void OnsImageChanging(string value);
    partial void OnsImageChanged();
    #endregion
		
		public tblImage()
		{
			this._tblPost = default(EntityRef<tblPost>);
			this._tblProduct = default(EntityRef<tblProduct>);
			this._tblService = default(EntityRef<tblService>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_iImageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_iImageID
		{
			get
			{
				return this._PK_iImageID;
			}
			set
			{
				if ((this._PK_iImageID != value))
				{
					this.OnPK_iImageIDChanging(value);
					this.SendPropertyChanging();
					this._PK_iImageID = value;
					this.SendPropertyChanged("PK_iImageID");
					this.OnPK_iImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_iProductID", DbType="Int")]
		public System.Nullable<int> FK_iProductID
		{
			get
			{
				return this._FK_iProductID;
			}
			set
			{
				if ((this._FK_iProductID != value))
				{
					if (this._tblProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_iProductIDChanging(value);
					this.SendPropertyChanging();
					this._FK_iProductID = value;
					this.SendPropertyChanged("FK_iProductID");
					this.OnFK_iProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_iServiceID", DbType="Int")]
		public System.Nullable<int> FK_iServiceID
		{
			get
			{
				return this._FK_iServiceID;
			}
			set
			{
				if ((this._FK_iServiceID != value))
				{
					if (this._tblService.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_iServiceIDChanging(value);
					this.SendPropertyChanging();
					this._FK_iServiceID = value;
					this.SendPropertyChanged("FK_iServiceID");
					this.OnFK_iServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_iPostID", DbType="Int")]
		public System.Nullable<int> FK_iPostID
		{
			get
			{
				return this._FK_iPostID;
			}
			set
			{
				if ((this._FK_iPostID != value))
				{
					if (this._tblPost.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_iPostIDChanging(value);
					this.SendPropertyChanging();
					this._FK_iPostID = value;
					this.SendPropertyChanged("FK_iPostID");
					this.OnFK_iPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_iComboServiceID", DbType="Int")]
		public System.Nullable<int> FK_iComboServiceID
		{
			get
			{
				return this._FK_iComboServiceID;
			}
			set
			{
				if ((this._FK_iComboServiceID != value))
				{
					this.OnFK_iComboServiceIDChanging(value);
					this.SendPropertyChanging();
					this._FK_iComboServiceID = value;
					this.SendPropertyChanged("FK_iComboServiceID");
					this.OnFK_iComboServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sImage", DbType="NVarChar(200)")]
		public string sImage
		{
			get
			{
				return this._sImage;
			}
			set
			{
				if ((this._sImage != value))
				{
					this.OnsImageChanging(value);
					this.SendPropertyChanging();
					this._sImage = value;
					this.SendPropertyChanged("sImage");
					this.OnsImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPost_tblImage", Storage="_tblPost", ThisKey="FK_iPostID", OtherKey="PK_iPostID", IsForeignKey=true)]
		public tblPost tblPost
		{
			get
			{
				return this._tblPost.Entity;
			}
			set
			{
				tblPost previousValue = this._tblPost.Entity;
				if (((previousValue != value) 
							|| (this._tblPost.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblPost.Entity = null;
						previousValue.tblImages.Remove(this);
					}
					this._tblPost.Entity = value;
					if ((value != null))
					{
						value.tblImages.Add(this);
						this._FK_iPostID = value.PK_iPostID;
					}
					else
					{
						this._FK_iPostID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblPost");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProduct_tblImage", Storage="_tblProduct", ThisKey="FK_iProductID", OtherKey="PK_iProductID", IsForeignKey=true)]
		public tblProduct tblProduct
		{
			get
			{
				return this._tblProduct.Entity;
			}
			set
			{
				tblProduct previousValue = this._tblProduct.Entity;
				if (((previousValue != value) 
							|| (this._tblProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblProduct.Entity = null;
						previousValue.tblImages.Remove(this);
					}
					this._tblProduct.Entity = value;
					if ((value != null))
					{
						value.tblImages.Add(this);
						this._FK_iProductID = value.PK_iProductID;
					}
					else
					{
						this._FK_iProductID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblProduct");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblService_tblImage", Storage="_tblService", ThisKey="FK_iServiceID", OtherKey="PK_iServiceID", IsForeignKey=true)]
		public tblService tblService
		{
			get
			{
				return this._tblService.Entity;
			}
			set
			{
				tblService previousValue = this._tblService.Entity;
				if (((previousValue != value) 
							|| (this._tblService.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblService.Entity = null;
						previousValue.tblImages.Remove(this);
					}
					this._tblService.Entity = value;
					if ((value != null))
					{
						value.tblImages.Add(this);
						this._FK_iServiceID = value.PK_iServiceID;
					}
					else
					{
						this._FK_iServiceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblService");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblOrderProduct")]
	public partial class tblOrderProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_iOrderID;
		
		private int _FK_iCustomerID;
		
		private System.Nullable<System.DateTime> _dNgayDatHang;
		
		private System.Nullable<System.DateTime> _dNgayGiaoHang;
		
		private string _sAddressDelivery;
		
		private string _sNote;
		
		private EntitySet<tblDeatailOrder> _tblDeatailOrders;
		
		private EntityRef<tblCustomer> _tblCustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_iOrderIDChanging(int value);
    partial void OnPK_iOrderIDChanged();
    partial void OnFK_iCustomerIDChanging(int value);
    partial void OnFK_iCustomerIDChanged();
    partial void OndNgayDatHangChanging(System.Nullable<System.DateTime> value);
    partial void OndNgayDatHangChanged();
    partial void OndNgayGiaoHangChanging(System.Nullable<System.DateTime> value);
    partial void OndNgayGiaoHangChanged();
    partial void OnsAddressDeliveryChanging(string value);
    partial void OnsAddressDeliveryChanged();
    partial void OnsNoteChanging(string value);
    partial void OnsNoteChanged();
    #endregion
		
		public tblOrderProduct()
		{
			this._tblDeatailOrders = new EntitySet<tblDeatailOrder>(new Action<tblDeatailOrder>(this.attach_tblDeatailOrders), new Action<tblDeatailOrder>(this.detach_tblDeatailOrders));
			this._tblCustomer = default(EntityRef<tblCustomer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_iOrderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_iOrderID
		{
			get
			{
				return this._PK_iOrderID;
			}
			set
			{
				if ((this._PK_iOrderID != value))
				{
					this.OnPK_iOrderIDChanging(value);
					this.SendPropertyChanging();
					this._PK_iOrderID = value;
					this.SendPropertyChanged("PK_iOrderID");
					this.OnPK_iOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_iCustomerID", DbType="Int NOT NULL")]
		public int FK_iCustomerID
		{
			get
			{
				return this._FK_iCustomerID;
			}
			set
			{
				if ((this._FK_iCustomerID != value))
				{
					if (this._tblCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_iCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._FK_iCustomerID = value;
					this.SendPropertyChanged("FK_iCustomerID");
					this.OnFK_iCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dNgayDatHang", DbType="Date")]
		public System.Nullable<System.DateTime> dNgayDatHang
		{
			get
			{
				return this._dNgayDatHang;
			}
			set
			{
				if ((this._dNgayDatHang != value))
				{
					this.OndNgayDatHangChanging(value);
					this.SendPropertyChanging();
					this._dNgayDatHang = value;
					this.SendPropertyChanged("dNgayDatHang");
					this.OndNgayDatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dNgayGiaoHang", DbType="Date")]
		public System.Nullable<System.DateTime> dNgayGiaoHang
		{
			get
			{
				return this._dNgayGiaoHang;
			}
			set
			{
				if ((this._dNgayGiaoHang != value))
				{
					this.OndNgayGiaoHangChanging(value);
					this.SendPropertyChanging();
					this._dNgayGiaoHang = value;
					this.SendPropertyChanged("dNgayGiaoHang");
					this.OndNgayGiaoHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAddressDelivery", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string sAddressDelivery
		{
			get
			{
				return this._sAddressDelivery;
			}
			set
			{
				if ((this._sAddressDelivery != value))
				{
					this.OnsAddressDeliveryChanging(value);
					this.SendPropertyChanging();
					this._sAddressDelivery = value;
					this.SendPropertyChanged("sAddressDelivery");
					this.OnsAddressDeliveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sNote", DbType="NVarChar(250)")]
		public string sNote
		{
			get
			{
				return this._sNote;
			}
			set
			{
				if ((this._sNote != value))
				{
					this.OnsNoteChanging(value);
					this.SendPropertyChanging();
					this._sNote = value;
					this.SendPropertyChanged("sNote");
					this.OnsNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblOrderProduct_tblDeatailOrder", Storage="_tblDeatailOrders", ThisKey="PK_iOrderID", OtherKey="FK_iOrderID")]
		public EntitySet<tblDeatailOrder> tblDeatailOrders
		{
			get
			{
				return this._tblDeatailOrders;
			}
			set
			{
				this._tblDeatailOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCustomer_tblOrderProduct", Storage="_tblCustomer", ThisKey="FK_iCustomerID", OtherKey="PK_iCustomerID", IsForeignKey=true)]
		public tblCustomer tblCustomer
		{
			get
			{
				return this._tblCustomer.Entity;
			}
			set
			{
				tblCustomer previousValue = this._tblCustomer.Entity;
				if (((previousValue != value) 
							|| (this._tblCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCustomer.Entity = null;
						previousValue.tblOrderProducts.Remove(this);
					}
					this._tblCustomer.Entity = value;
					if ((value != null))
					{
						value.tblOrderProducts.Add(this);
						this._FK_iCustomerID = value.PK_iCustomerID;
					}
					else
					{
						this._FK_iCustomerID = default(int);
					}
					this.SendPropertyChanged("tblCustomer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblDeatailOrders(tblDeatailOrder entity)
		{
			this.SendPropertyChanging();
			entity.tblOrderProduct = this;
		}
		
		private void detach_tblDeatailOrders(tblDeatailOrder entity)
		{
			this.SendPropertyChanging();
			entity.tblOrderProduct = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPay")]
	public partial class tblPay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_iPayID;
		
		private int _FK_iReceiptID;
		
		private System.Nullable<int> _FK_iPaymentsID;
		
		private System.Nullable<double> _fTotalMoney;
		
		private System.Nullable<System.DateTime> _dCompletionTime;
		
		private EntityRef<tblPayment> _tblPayment;
		
		private EntityRef<tblReceipt> _tblReceipt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_iPayIDChanging(int value);
    partial void OnPK_iPayIDChanged();
    partial void OnFK_iReceiptIDChanging(int value);
    partial void OnFK_iReceiptIDChanged();
    partial void OnFK_iPaymentsIDChanging(System.Nullable<int> value);
    partial void OnFK_iPaymentsIDChanged();
    partial void OnfTotalMoneyChanging(System.Nullable<double> value);
    partial void OnfTotalMoneyChanged();
    partial void OndCompletionTimeChanging(System.Nullable<System.DateTime> value);
    partial void OndCompletionTimeChanged();
    #endregion
		
		public tblPay()
		{
			this._tblPayment = default(EntityRef<tblPayment>);
			this._tblReceipt = default(EntityRef<tblReceipt>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_iPayID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_iPayID
		{
			get
			{
				return this._PK_iPayID;
			}
			set
			{
				if ((this._PK_iPayID != value))
				{
					this.OnPK_iPayIDChanging(value);
					this.SendPropertyChanging();
					this._PK_iPayID = value;
					this.SendPropertyChanged("PK_iPayID");
					this.OnPK_iPayIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_iReceiptID", DbType="Int NOT NULL")]
		public int FK_iReceiptID
		{
			get
			{
				return this._FK_iReceiptID;
			}
			set
			{
				if ((this._FK_iReceiptID != value))
				{
					if (this._tblReceipt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_iReceiptIDChanging(value);
					this.SendPropertyChanging();
					this._FK_iReceiptID = value;
					this.SendPropertyChanged("FK_iReceiptID");
					this.OnFK_iReceiptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_iPaymentsID", DbType="Int")]
		public System.Nullable<int> FK_iPaymentsID
		{
			get
			{
				return this._FK_iPaymentsID;
			}
			set
			{
				if ((this._FK_iPaymentsID != value))
				{
					if (this._tblPayment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_iPaymentsIDChanging(value);
					this.SendPropertyChanging();
					this._FK_iPaymentsID = value;
					this.SendPropertyChanged("FK_iPaymentsID");
					this.OnFK_iPaymentsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fTotalMoney", DbType="Float")]
		public System.Nullable<double> fTotalMoney
		{
			get
			{
				return this._fTotalMoney;
			}
			set
			{
				if ((this._fTotalMoney != value))
				{
					this.OnfTotalMoneyChanging(value);
					this.SendPropertyChanging();
					this._fTotalMoney = value;
					this.SendPropertyChanged("fTotalMoney");
					this.OnfTotalMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dCompletionTime", DbType="Date")]
		public System.Nullable<System.DateTime> dCompletionTime
		{
			get
			{
				return this._dCompletionTime;
			}
			set
			{
				if ((this._dCompletionTime != value))
				{
					this.OndCompletionTimeChanging(value);
					this.SendPropertyChanging();
					this._dCompletionTime = value;
					this.SendPropertyChanged("dCompletionTime");
					this.OndCompletionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPayment_tblPay", Storage="_tblPayment", ThisKey="FK_iPaymentsID", OtherKey="PK_iPaymentsID", IsForeignKey=true)]
		public tblPayment tblPayment
		{
			get
			{
				return this._tblPayment.Entity;
			}
			set
			{
				tblPayment previousValue = this._tblPayment.Entity;
				if (((previousValue != value) 
							|| (this._tblPayment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblPayment.Entity = null;
						previousValue.tblPays.Remove(this);
					}
					this._tblPayment.Entity = value;
					if ((value != null))
					{
						value.tblPays.Add(this);
						this._FK_iPaymentsID = value.PK_iPaymentsID;
					}
					else
					{
						this._FK_iPaymentsID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblPayment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblReceipt_tblPay", Storage="_tblReceipt", ThisKey="FK_iReceiptID", OtherKey="PK_iReceiptID", IsForeignKey=true)]
		public tblReceipt tblReceipt
		{
			get
			{
				return this._tblReceipt.Entity;
			}
			set
			{
				tblReceipt previousValue = this._tblReceipt.Entity;
				if (((previousValue != value) 
							|| (this._tblReceipt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblReceipt.Entity = null;
						previousValue.tblPays.Remove(this);
					}
					this._tblReceipt.Entity = value;
					if ((value != null))
					{
						value.tblPays.Add(this);
						this._FK_iReceiptID = value.PK_iReceiptID;
					}
					else
					{
						this._FK_iReceiptID = default(int);
					}
					this.SendPropertyChanged("tblReceipt");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPayments")]
	public partial class tblPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_iPaymentsID;
		
		private string _sPaymentName;
		
		private string _sDescription;
		
		private System.Nullable<bool> _bStatus;
		
		private EntitySet<tblPay> _tblPays;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_iPaymentsIDChanging(int value);
    partial void OnPK_iPaymentsIDChanged();
    partial void OnsPaymentNameChanging(string value);
    partial void OnsPaymentNameChanged();
    partial void OnsDescriptionChanging(string value);
    partial void OnsDescriptionChanged();
    partial void OnbStatusChanging(System.Nullable<bool> value);
    partial void OnbStatusChanged();
    #endregion
		
		public tblPayment()
		{
			this._tblPays = new EntitySet<tblPay>(new Action<tblPay>(this.attach_tblPays), new Action<tblPay>(this.detach_tblPays));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_iPaymentsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_iPaymentsID
		{
			get
			{
				return this._PK_iPaymentsID;
			}
			set
			{
				if ((this._PK_iPaymentsID != value))
				{
					this.OnPK_iPaymentsIDChanging(value);
					this.SendPropertyChanging();
					this._PK_iPaymentsID = value;
					this.SendPropertyChanged("PK_iPaymentsID");
					this.OnPK_iPaymentsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sPaymentName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string sPaymentName
		{
			get
			{
				return this._sPaymentName;
			}
			set
			{
				if ((this._sPaymentName != value))
				{
					this.OnsPaymentNameChanging(value);
					this.SendPropertyChanging();
					this._sPaymentName = value;
					this.SendPropertyChanged("sPaymentName");
					this.OnsPaymentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDescription", DbType="NVarChar(200)")]
		public string sDescription
		{
			get
			{
				return this._sDescription;
			}
			set
			{
				if ((this._sDescription != value))
				{
					this.OnsDescriptionChanging(value);
					this.SendPropertyChanging();
					this._sDescription = value;
					this.SendPropertyChanged("sDescription");
					this.OnsDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bStatus", DbType="Bit")]
		public System.Nullable<bool> bStatus
		{
			get
			{
				return this._bStatus;
			}
			set
			{
				if ((this._bStatus != value))
				{
					this.OnbStatusChanging(value);
					this.SendPropertyChanging();
					this._bStatus = value;
					this.SendPropertyChanged("bStatus");
					this.OnbStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPayment_tblPay", Storage="_tblPays", ThisKey="PK_iPaymentsID", OtherKey="FK_iPaymentsID")]
		public EntitySet<tblPay> tblPays
		{
			get
			{
				return this._tblPays;
			}
			set
			{
				this._tblPays.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblPays(tblPay entity)
		{
			this.SendPropertyChanging();
			entity.tblPayment = this;
		}
		
		private void detach_tblPays(tblPay entity)
		{
			this.SendPropertyChanging();
			entity.tblPayment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPosts")]
	public partial class tblPost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_iPostID;
		
		private string _FK_sCategoryPostID;
		
		private System.Nullable<int> _FK_iStaffID;
		
		private string _sPostName;
		
		private string _sDesciption;
		
		private string _sImage;
		
		private System.Nullable<System.DateTime> _dCreationTime;
		
		private System.Nullable<bool> _bStatus;
		
		private EntitySet<tblImage> _tblImages;
		
		private EntityRef<tblCategoryPost> _tblCategoryPost;
		
		private EntityRef<tblStaff> _tblStaff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_iPostIDChanging(int value);
    partial void OnPK_iPostIDChanged();
    partial void OnFK_sCategoryPostIDChanging(string value);
    partial void OnFK_sCategoryPostIDChanged();
    partial void OnFK_iStaffIDChanging(System.Nullable<int> value);
    partial void OnFK_iStaffIDChanged();
    partial void OnsPostNameChanging(string value);
    partial void OnsPostNameChanged();
    partial void OnsDesciptionChanging(string value);
    partial void OnsDesciptionChanged();
    partial void OnsImageChanging(string value);
    partial void OnsImageChanged();
    partial void OndCreationTimeChanging(System.Nullable<System.DateTime> value);
    partial void OndCreationTimeChanged();
    partial void OnbStatusChanging(System.Nullable<bool> value);
    partial void OnbStatusChanged();
    #endregion
		
		public tblPost()
		{
			this._tblImages = new EntitySet<tblImage>(new Action<tblImage>(this.attach_tblImages), new Action<tblImage>(this.detach_tblImages));
			this._tblCategoryPost = default(EntityRef<tblCategoryPost>);
			this._tblStaff = default(EntityRef<tblStaff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_iPostID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_iPostID
		{
			get
			{
				return this._PK_iPostID;
			}
			set
			{
				if ((this._PK_iPostID != value))
				{
					this.OnPK_iPostIDChanging(value);
					this.SendPropertyChanging();
					this._PK_iPostID = value;
					this.SendPropertyChanged("PK_iPostID");
					this.OnPK_iPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_sCategoryPostID", DbType="VarChar(50)")]
		public string FK_sCategoryPostID
		{
			get
			{
				return this._FK_sCategoryPostID;
			}
			set
			{
				if ((this._FK_sCategoryPostID != value))
				{
					if (this._tblCategoryPost.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_sCategoryPostIDChanging(value);
					this.SendPropertyChanging();
					this._FK_sCategoryPostID = value;
					this.SendPropertyChanged("FK_sCategoryPostID");
					this.OnFK_sCategoryPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_iStaffID", DbType="Int")]
		public System.Nullable<int> FK_iStaffID
		{
			get
			{
				return this._FK_iStaffID;
			}
			set
			{
				if ((this._FK_iStaffID != value))
				{
					if (this._tblStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_iStaffIDChanging(value);
					this.SendPropertyChanging();
					this._FK_iStaffID = value;
					this.SendPropertyChanged("FK_iStaffID");
					this.OnFK_iStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sPostName", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string sPostName
		{
			get
			{
				return this._sPostName;
			}
			set
			{
				if ((this._sPostName != value))
				{
					this.OnsPostNameChanging(value);
					this.SendPropertyChanging();
					this._sPostName = value;
					this.SendPropertyChanged("sPostName");
					this.OnsPostNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDesciption", DbType="NVarChar(1000)")]
		public string sDesciption
		{
			get
			{
				return this._sDesciption;
			}
			set
			{
				if ((this._sDesciption != value))
				{
					this.OnsDesciptionChanging(value);
					this.SendPropertyChanging();
					this._sDesciption = value;
					this.SendPropertyChanged("sDesciption");
					this.OnsDesciptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sImage", DbType="NVarChar(300)")]
		public string sImage
		{
			get
			{
				return this._sImage;
			}
			set
			{
				if ((this._sImage != value))
				{
					this.OnsImageChanging(value);
					this.SendPropertyChanging();
					this._sImage = value;
					this.SendPropertyChanged("sImage");
					this.OnsImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dCreationTime", DbType="Date")]
		public System.Nullable<System.DateTime> dCreationTime
		{
			get
			{
				return this._dCreationTime;
			}
			set
			{
				if ((this._dCreationTime != value))
				{
					this.OndCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._dCreationTime = value;
					this.SendPropertyChanged("dCreationTime");
					this.OndCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bStatus", DbType="Bit")]
		public System.Nullable<bool> bStatus
		{
			get
			{
				return this._bStatus;
			}
			set
			{
				if ((this._bStatus != value))
				{
					this.OnbStatusChanging(value);
					this.SendPropertyChanging();
					this._bStatus = value;
					this.SendPropertyChanged("bStatus");
					this.OnbStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPost_tblImage", Storage="_tblImages", ThisKey="PK_iPostID", OtherKey="FK_iPostID")]
		public EntitySet<tblImage> tblImages
		{
			get
			{
				return this._tblImages;
			}
			set
			{
				this._tblImages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCategoryPost_tblPost", Storage="_tblCategoryPost", ThisKey="FK_sCategoryPostID", OtherKey="PK_sCategoryPostID", IsForeignKey=true)]
		public tblCategoryPost tblCategoryPost
		{
			get
			{
				return this._tblCategoryPost.Entity;
			}
			set
			{
				tblCategoryPost previousValue = this._tblCategoryPost.Entity;
				if (((previousValue != value) 
							|| (this._tblCategoryPost.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCategoryPost.Entity = null;
						previousValue.tblPosts.Remove(this);
					}
					this._tblCategoryPost.Entity = value;
					if ((value != null))
					{
						value.tblPosts.Add(this);
						this._FK_sCategoryPostID = value.PK_sCategoryPostID;
					}
					else
					{
						this._FK_sCategoryPostID = default(string);
					}
					this.SendPropertyChanged("tblCategoryPost");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStaff_tblPost", Storage="_tblStaff", ThisKey="FK_iStaffID", OtherKey="PK_iStaffID", IsForeignKey=true)]
		public tblStaff tblStaff
		{
			get
			{
				return this._tblStaff.Entity;
			}
			set
			{
				tblStaff previousValue = this._tblStaff.Entity;
				if (((previousValue != value) 
							|| (this._tblStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblStaff.Entity = null;
						previousValue.tblPosts.Remove(this);
					}
					this._tblStaff.Entity = value;
					if ((value != null))
					{
						value.tblPosts.Add(this);
						this._FK_iStaffID = value.PK_iStaffID;
					}
					else
					{
						this._FK_iStaffID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblStaff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblImages(tblImage entity)
		{
			this.SendPropertyChanging();
			entity.tblPost = this;
		}
		
		private void detach_tblImages(tblImage entity)
		{
			this.SendPropertyChanging();
			entity.tblPost = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblProduct")]
	public partial class tblProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_iProductID;
		
		private string _FK_sCategoryProductID;
		
		private string _FK_sDiscountID;
		
		private string _sProductName;
		
		private string _sDescription;
		
		private System.Nullable<double> _fPrice;
		
		private System.Nullable<int> _sStar;
		
		private string _sImage;
		
		private System.Nullable<int> _iQuantityInStock;
		
		private System.Nullable<int> _iViewNumber;
		
		private System.Nullable<int> _bStatus;
		
		private EntitySet<tblCartDetail> _tblCartDetails;
		
		private EntitySet<tblDeatailOrder> _tblDeatailOrders;
		
		private EntitySet<tblImage> _tblImages;
		
		private EntitySet<tblReceiptDetail> _tblReceiptDetails;
		
		private EntityRef<tblCategoryProduct> _tblCategoryProduct;
		
		private EntityRef<tblDiscount> _tblDiscount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_iProductIDChanging(int value);
    partial void OnPK_iProductIDChanged();
    partial void OnFK_sCategoryProductIDChanging(string value);
    partial void OnFK_sCategoryProductIDChanged();
    partial void OnFK_sDiscountIDChanging(string value);
    partial void OnFK_sDiscountIDChanged();
    partial void OnsProductNameChanging(string value);
    partial void OnsProductNameChanged();
    partial void OnsDescriptionChanging(string value);
    partial void OnsDescriptionChanged();
    partial void OnfPriceChanging(System.Nullable<double> value);
    partial void OnfPriceChanged();
    partial void OnsStarChanging(System.Nullable<int> value);
    partial void OnsStarChanged();
    partial void OnsImageChanging(string value);
    partial void OnsImageChanged();
    partial void OniQuantityInStockChanging(System.Nullable<int> value);
    partial void OniQuantityInStockChanged();
    partial void OniViewNumberChanging(System.Nullable<int> value);
    partial void OniViewNumberChanged();
    partial void OnbStatusChanging(System.Nullable<int> value);
    partial void OnbStatusChanged();
    #endregion
		
		public tblProduct()
		{
			this._tblCartDetails = new EntitySet<tblCartDetail>(new Action<tblCartDetail>(this.attach_tblCartDetails), new Action<tblCartDetail>(this.detach_tblCartDetails));
			this._tblDeatailOrders = new EntitySet<tblDeatailOrder>(new Action<tblDeatailOrder>(this.attach_tblDeatailOrders), new Action<tblDeatailOrder>(this.detach_tblDeatailOrders));
			this._tblImages = new EntitySet<tblImage>(new Action<tblImage>(this.attach_tblImages), new Action<tblImage>(this.detach_tblImages));
			this._tblReceiptDetails = new EntitySet<tblReceiptDetail>(new Action<tblReceiptDetail>(this.attach_tblReceiptDetails), new Action<tblReceiptDetail>(this.detach_tblReceiptDetails));
			this._tblCategoryProduct = default(EntityRef<tblCategoryProduct>);
			this._tblDiscount = default(EntityRef<tblDiscount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_iProductID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_iProductID
		{
			get
			{
				return this._PK_iProductID;
			}
			set
			{
				if ((this._PK_iProductID != value))
				{
					this.OnPK_iProductIDChanging(value);
					this.SendPropertyChanging();
					this._PK_iProductID = value;
					this.SendPropertyChanged("PK_iProductID");
					this.OnPK_iProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_sCategoryProductID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FK_sCategoryProductID
		{
			get
			{
				return this._FK_sCategoryProductID;
			}
			set
			{
				if ((this._FK_sCategoryProductID != value))
				{
					if (this._tblCategoryProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_sCategoryProductIDChanging(value);
					this.SendPropertyChanging();
					this._FK_sCategoryProductID = value;
					this.SendPropertyChanged("FK_sCategoryProductID");
					this.OnFK_sCategoryProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_sDiscountID", DbType="VarChar(50)")]
		public string FK_sDiscountID
		{
			get
			{
				return this._FK_sDiscountID;
			}
			set
			{
				if ((this._FK_sDiscountID != value))
				{
					if (this._tblDiscount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_sDiscountIDChanging(value);
					this.SendPropertyChanging();
					this._FK_sDiscountID = value;
					this.SendPropertyChanged("FK_sDiscountID");
					this.OnFK_sDiscountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sProductName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string sProductName
		{
			get
			{
				return this._sProductName;
			}
			set
			{
				if ((this._sProductName != value))
				{
					this.OnsProductNameChanging(value);
					this.SendPropertyChanging();
					this._sProductName = value;
					this.SendPropertyChanged("sProductName");
					this.OnsProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDescription", DbType="NVarChar(MAX)")]
		public string sDescription
		{
			get
			{
				return this._sDescription;
			}
			set
			{
				if ((this._sDescription != value))
				{
					this.OnsDescriptionChanging(value);
					this.SendPropertyChanging();
					this._sDescription = value;
					this.SendPropertyChanged("sDescription");
					this.OnsDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fPrice", DbType="Float")]
		public System.Nullable<double> fPrice
		{
			get
			{
				return this._fPrice;
			}
			set
			{
				if ((this._fPrice != value))
				{
					this.OnfPriceChanging(value);
					this.SendPropertyChanging();
					this._fPrice = value;
					this.SendPropertyChanged("fPrice");
					this.OnfPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sStar", DbType="Int")]
		public System.Nullable<int> sStar
		{
			get
			{
				return this._sStar;
			}
			set
			{
				if ((this._sStar != value))
				{
					this.OnsStarChanging(value);
					this.SendPropertyChanging();
					this._sStar = value;
					this.SendPropertyChanged("sStar");
					this.OnsStarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sImage", DbType="VarChar(150)")]
		public string sImage
		{
			get
			{
				return this._sImage;
			}
			set
			{
				if ((this._sImage != value))
				{
					this.OnsImageChanging(value);
					this.SendPropertyChanging();
					this._sImage = value;
					this.SendPropertyChanged("sImage");
					this.OnsImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iQuantityInStock", DbType="Int")]
		public System.Nullable<int> iQuantityInStock
		{
			get
			{
				return this._iQuantityInStock;
			}
			set
			{
				if ((this._iQuantityInStock != value))
				{
					this.OniQuantityInStockChanging(value);
					this.SendPropertyChanging();
					this._iQuantityInStock = value;
					this.SendPropertyChanged("iQuantityInStock");
					this.OniQuantityInStockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iViewNumber", DbType="Int")]
		public System.Nullable<int> iViewNumber
		{
			get
			{
				return this._iViewNumber;
			}
			set
			{
				if ((this._iViewNumber != value))
				{
					this.OniViewNumberChanging(value);
					this.SendPropertyChanging();
					this._iViewNumber = value;
					this.SendPropertyChanged("iViewNumber");
					this.OniViewNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bStatus", DbType="Int")]
		public System.Nullable<int> bStatus
		{
			get
			{
				return this._bStatus;
			}
			set
			{
				if ((this._bStatus != value))
				{
					this.OnbStatusChanging(value);
					this.SendPropertyChanging();
					this._bStatus = value;
					this.SendPropertyChanged("bStatus");
					this.OnbStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProduct_tblCartDetail", Storage="_tblCartDetails", ThisKey="PK_iProductID", OtherKey="FK_iProductID")]
		public EntitySet<tblCartDetail> tblCartDetails
		{
			get
			{
				return this._tblCartDetails;
			}
			set
			{
				this._tblCartDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProduct_tblDeatailOrder", Storage="_tblDeatailOrders", ThisKey="PK_iProductID", OtherKey="FK_iProductID")]
		public EntitySet<tblDeatailOrder> tblDeatailOrders
		{
			get
			{
				return this._tblDeatailOrders;
			}
			set
			{
				this._tblDeatailOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProduct_tblImage", Storage="_tblImages", ThisKey="PK_iProductID", OtherKey="FK_iProductID")]
		public EntitySet<tblImage> tblImages
		{
			get
			{
				return this._tblImages;
			}
			set
			{
				this._tblImages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProduct_tblReceiptDetail", Storage="_tblReceiptDetails", ThisKey="PK_iProductID", OtherKey="FK_iProductID")]
		public EntitySet<tblReceiptDetail> tblReceiptDetails
		{
			get
			{
				return this._tblReceiptDetails;
			}
			set
			{
				this._tblReceiptDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCategoryProduct_tblProduct", Storage="_tblCategoryProduct", ThisKey="FK_sCategoryProductID", OtherKey="PK_sCategoryProductID", IsForeignKey=true)]
		public tblCategoryProduct tblCategoryProduct
		{
			get
			{
				return this._tblCategoryProduct.Entity;
			}
			set
			{
				tblCategoryProduct previousValue = this._tblCategoryProduct.Entity;
				if (((previousValue != value) 
							|| (this._tblCategoryProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCategoryProduct.Entity = null;
						previousValue.tblProducts.Remove(this);
					}
					this._tblCategoryProduct.Entity = value;
					if ((value != null))
					{
						value.tblProducts.Add(this);
						this._FK_sCategoryProductID = value.PK_sCategoryProductID;
					}
					else
					{
						this._FK_sCategoryProductID = default(string);
					}
					this.SendPropertyChanged("tblCategoryProduct");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDiscount_tblProduct", Storage="_tblDiscount", ThisKey="FK_sDiscountID", OtherKey="PK_sDiscountID", IsForeignKey=true)]
		public tblDiscount tblDiscount
		{
			get
			{
				return this._tblDiscount.Entity;
			}
			set
			{
				tblDiscount previousValue = this._tblDiscount.Entity;
				if (((previousValue != value) 
							|| (this._tblDiscount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblDiscount.Entity = null;
						previousValue.tblProducts.Remove(this);
					}
					this._tblDiscount.Entity = value;
					if ((value != null))
					{
						value.tblProducts.Add(this);
						this._FK_sDiscountID = value.PK_sDiscountID;
					}
					else
					{
						this._FK_sDiscountID = default(string);
					}
					this.SendPropertyChanged("tblDiscount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblCartDetails(tblCartDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblProduct = this;
		}
		
		private void detach_tblCartDetails(tblCartDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblProduct = null;
		}
		
		private void attach_tblDeatailOrders(tblDeatailOrder entity)
		{
			this.SendPropertyChanging();
			entity.tblProduct = this;
		}
		
		private void detach_tblDeatailOrders(tblDeatailOrder entity)
		{
			this.SendPropertyChanging();
			entity.tblProduct = null;
		}
		
		private void attach_tblImages(tblImage entity)
		{
			this.SendPropertyChanging();
			entity.tblProduct = this;
		}
		
		private void detach_tblImages(tblImage entity)
		{
			this.SendPropertyChanging();
			entity.tblProduct = null;
		}
		
		private void attach_tblReceiptDetails(tblReceiptDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblProduct = this;
		}
		
		private void detach_tblReceiptDetails(tblReceiptDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblProduct = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblReceipt")]
	public partial class tblReceipt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_iReceiptID;
		
		private int _FK_iCustomID;
		
		private System.Nullable<int> _FK_iStaffID;
		
		private System.Nullable<System.DateTime> _dTimeCreate;
		
		private EntitySet<tblPay> _tblPays;
		
		private EntityRef<tblCustomer> _tblCustomer;
		
		private EntityRef<tblStaff> _tblStaff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_iReceiptIDChanging(int value);
    partial void OnPK_iReceiptIDChanged();
    partial void OnFK_iCustomIDChanging(int value);
    partial void OnFK_iCustomIDChanged();
    partial void OnFK_iStaffIDChanging(System.Nullable<int> value);
    partial void OnFK_iStaffIDChanged();
    partial void OndTimeCreateChanging(System.Nullable<System.DateTime> value);
    partial void OndTimeCreateChanged();
    #endregion
		
		public tblReceipt()
		{
			this._tblPays = new EntitySet<tblPay>(new Action<tblPay>(this.attach_tblPays), new Action<tblPay>(this.detach_tblPays));
			this._tblCustomer = default(EntityRef<tblCustomer>);
			this._tblStaff = default(EntityRef<tblStaff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_iReceiptID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_iReceiptID
		{
			get
			{
				return this._PK_iReceiptID;
			}
			set
			{
				if ((this._PK_iReceiptID != value))
				{
					this.OnPK_iReceiptIDChanging(value);
					this.SendPropertyChanging();
					this._PK_iReceiptID = value;
					this.SendPropertyChanged("PK_iReceiptID");
					this.OnPK_iReceiptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_iCustomID", DbType="Int NOT NULL")]
		public int FK_iCustomID
		{
			get
			{
				return this._FK_iCustomID;
			}
			set
			{
				if ((this._FK_iCustomID != value))
				{
					if (this._tblCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_iCustomIDChanging(value);
					this.SendPropertyChanging();
					this._FK_iCustomID = value;
					this.SendPropertyChanged("FK_iCustomID");
					this.OnFK_iCustomIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_iStaffID", DbType="Int")]
		public System.Nullable<int> FK_iStaffID
		{
			get
			{
				return this._FK_iStaffID;
			}
			set
			{
				if ((this._FK_iStaffID != value))
				{
					if (this._tblStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_iStaffIDChanging(value);
					this.SendPropertyChanging();
					this._FK_iStaffID = value;
					this.SendPropertyChanged("FK_iStaffID");
					this.OnFK_iStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dTimeCreate", DbType="Date")]
		public System.Nullable<System.DateTime> dTimeCreate
		{
			get
			{
				return this._dTimeCreate;
			}
			set
			{
				if ((this._dTimeCreate != value))
				{
					this.OndTimeCreateChanging(value);
					this.SendPropertyChanging();
					this._dTimeCreate = value;
					this.SendPropertyChanged("dTimeCreate");
					this.OndTimeCreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblReceipt_tblPay", Storage="_tblPays", ThisKey="PK_iReceiptID", OtherKey="FK_iReceiptID")]
		public EntitySet<tblPay> tblPays
		{
			get
			{
				return this._tblPays;
			}
			set
			{
				this._tblPays.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCustomer_tblReceipt", Storage="_tblCustomer", ThisKey="FK_iCustomID", OtherKey="PK_iCustomerID", IsForeignKey=true)]
		public tblCustomer tblCustomer
		{
			get
			{
				return this._tblCustomer.Entity;
			}
			set
			{
				tblCustomer previousValue = this._tblCustomer.Entity;
				if (((previousValue != value) 
							|| (this._tblCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCustomer.Entity = null;
						previousValue.tblReceipts.Remove(this);
					}
					this._tblCustomer.Entity = value;
					if ((value != null))
					{
						value.tblReceipts.Add(this);
						this._FK_iCustomID = value.PK_iCustomerID;
					}
					else
					{
						this._FK_iCustomID = default(int);
					}
					this.SendPropertyChanged("tblCustomer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStaff_tblReceipt", Storage="_tblStaff", ThisKey="FK_iStaffID", OtherKey="PK_iStaffID", IsForeignKey=true)]
		public tblStaff tblStaff
		{
			get
			{
				return this._tblStaff.Entity;
			}
			set
			{
				tblStaff previousValue = this._tblStaff.Entity;
				if (((previousValue != value) 
							|| (this._tblStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblStaff.Entity = null;
						previousValue.tblReceipts.Remove(this);
					}
					this._tblStaff.Entity = value;
					if ((value != null))
					{
						value.tblReceipts.Add(this);
						this._FK_iStaffID = value.PK_iStaffID;
					}
					else
					{
						this._FK_iStaffID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblStaff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblPays(tblPay entity)
		{
			this.SendPropertyChanging();
			entity.tblReceipt = this;
		}
		
		private void detach_tblPays(tblPay entity)
		{
			this.SendPropertyChanging();
			entity.tblReceipt = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblReceiptDetail")]
	public partial class tblReceiptDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_iReceiptDetailID;
		
		private System.Nullable<int> _FK_iProductID;
		
		private System.Nullable<int> _FK_iServiceID;
		
		private int _iQuantity;
		
		private EntityRef<tblProduct> _tblProduct;
		
		private EntityRef<tblService> _tblService;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_iReceiptDetailIDChanging(int value);
    partial void OnPK_iReceiptDetailIDChanged();
    partial void OnFK_iProductIDChanging(System.Nullable<int> value);
    partial void OnFK_iProductIDChanged();
    partial void OnFK_iServiceIDChanging(System.Nullable<int> value);
    partial void OnFK_iServiceIDChanged();
    partial void OniQuantityChanging(int value);
    partial void OniQuantityChanged();
    #endregion
		
		public tblReceiptDetail()
		{
			this._tblProduct = default(EntityRef<tblProduct>);
			this._tblService = default(EntityRef<tblService>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_iReceiptDetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_iReceiptDetailID
		{
			get
			{
				return this._PK_iReceiptDetailID;
			}
			set
			{
				if ((this._PK_iReceiptDetailID != value))
				{
					this.OnPK_iReceiptDetailIDChanging(value);
					this.SendPropertyChanging();
					this._PK_iReceiptDetailID = value;
					this.SendPropertyChanged("PK_iReceiptDetailID");
					this.OnPK_iReceiptDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_iProductID", DbType="Int")]
		public System.Nullable<int> FK_iProductID
		{
			get
			{
				return this._FK_iProductID;
			}
			set
			{
				if ((this._FK_iProductID != value))
				{
					if (this._tblProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_iProductIDChanging(value);
					this.SendPropertyChanging();
					this._FK_iProductID = value;
					this.SendPropertyChanged("FK_iProductID");
					this.OnFK_iProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_iServiceID", DbType="Int")]
		public System.Nullable<int> FK_iServiceID
		{
			get
			{
				return this._FK_iServiceID;
			}
			set
			{
				if ((this._FK_iServiceID != value))
				{
					if (this._tblService.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_iServiceIDChanging(value);
					this.SendPropertyChanging();
					this._FK_iServiceID = value;
					this.SendPropertyChanged("FK_iServiceID");
					this.OnFK_iServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iQuantity", DbType="Int NOT NULL")]
		public int iQuantity
		{
			get
			{
				return this._iQuantity;
			}
			set
			{
				if ((this._iQuantity != value))
				{
					this.OniQuantityChanging(value);
					this.SendPropertyChanging();
					this._iQuantity = value;
					this.SendPropertyChanged("iQuantity");
					this.OniQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProduct_tblReceiptDetail", Storage="_tblProduct", ThisKey="FK_iProductID", OtherKey="PK_iProductID", IsForeignKey=true)]
		public tblProduct tblProduct
		{
			get
			{
				return this._tblProduct.Entity;
			}
			set
			{
				tblProduct previousValue = this._tblProduct.Entity;
				if (((previousValue != value) 
							|| (this._tblProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblProduct.Entity = null;
						previousValue.tblReceiptDetails.Remove(this);
					}
					this._tblProduct.Entity = value;
					if ((value != null))
					{
						value.tblReceiptDetails.Add(this);
						this._FK_iProductID = value.PK_iProductID;
					}
					else
					{
						this._FK_iProductID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblProduct");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblService_tblReceiptDetail", Storage="_tblService", ThisKey="FK_iServiceID", OtherKey="PK_iServiceID", IsForeignKey=true)]
		public tblService tblService
		{
			get
			{
				return this._tblService.Entity;
			}
			set
			{
				tblService previousValue = this._tblService.Entity;
				if (((previousValue != value) 
							|| (this._tblService.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblService.Entity = null;
						previousValue.tblReceiptDetails.Remove(this);
					}
					this._tblService.Entity = value;
					if ((value != null))
					{
						value.tblReceiptDetails.Add(this);
						this._FK_iServiceID = value.PK_iServiceID;
					}
					else
					{
						this._FK_iServiceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblService");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblService")]
	public partial class tblService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_iServiceID;
		
		private string _FK_sDiscountID;
		
		private string _FK_sTypeServiceID;
		
		private string _sNameService;
		
		private string _sDescription;
		
		private System.Nullable<double> _fPrice;
		
		private string _sImage;
		
		private System.Nullable<bool> _bStatus;
		
		private EntitySet<tblDetailBookAdvance> _tblDetailBookAdvances;
		
		private EntitySet<tblImage> _tblImages;
		
		private EntitySet<tblReceiptDetail> _tblReceiptDetails;
		
		private EntityRef<tblDiscount> _tblDiscount;
		
		private EntityRef<tblTypeService> _tblTypeService;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_iServiceIDChanging(int value);
    partial void OnPK_iServiceIDChanged();
    partial void OnFK_sDiscountIDChanging(string value);
    partial void OnFK_sDiscountIDChanged();
    partial void OnFK_sTypeServiceIDChanging(string value);
    partial void OnFK_sTypeServiceIDChanged();
    partial void OnsNameServiceChanging(string value);
    partial void OnsNameServiceChanged();
    partial void OnsDescriptionChanging(string value);
    partial void OnsDescriptionChanged();
    partial void OnfPriceChanging(System.Nullable<double> value);
    partial void OnfPriceChanged();
    partial void OnsImageChanging(string value);
    partial void OnsImageChanged();
    partial void OnbStatusChanging(System.Nullable<bool> value);
    partial void OnbStatusChanged();
    #endregion
		
		public tblService()
		{
			this._tblDetailBookAdvances = new EntitySet<tblDetailBookAdvance>(new Action<tblDetailBookAdvance>(this.attach_tblDetailBookAdvances), new Action<tblDetailBookAdvance>(this.detach_tblDetailBookAdvances));
			this._tblImages = new EntitySet<tblImage>(new Action<tblImage>(this.attach_tblImages), new Action<tblImage>(this.detach_tblImages));
			this._tblReceiptDetails = new EntitySet<tblReceiptDetail>(new Action<tblReceiptDetail>(this.attach_tblReceiptDetails), new Action<tblReceiptDetail>(this.detach_tblReceiptDetails));
			this._tblDiscount = default(EntityRef<tblDiscount>);
			this._tblTypeService = default(EntityRef<tblTypeService>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_iServiceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_iServiceID
		{
			get
			{
				return this._PK_iServiceID;
			}
			set
			{
				if ((this._PK_iServiceID != value))
				{
					this.OnPK_iServiceIDChanging(value);
					this.SendPropertyChanging();
					this._PK_iServiceID = value;
					this.SendPropertyChanged("PK_iServiceID");
					this.OnPK_iServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_sDiscountID", DbType="VarChar(50)")]
		public string FK_sDiscountID
		{
			get
			{
				return this._FK_sDiscountID;
			}
			set
			{
				if ((this._FK_sDiscountID != value))
				{
					if (this._tblDiscount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_sDiscountIDChanging(value);
					this.SendPropertyChanging();
					this._FK_sDiscountID = value;
					this.SendPropertyChanged("FK_sDiscountID");
					this.OnFK_sDiscountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_sTypeServiceID", DbType="VarChar(50)")]
		public string FK_sTypeServiceID
		{
			get
			{
				return this._FK_sTypeServiceID;
			}
			set
			{
				if ((this._FK_sTypeServiceID != value))
				{
					if (this._tblTypeService.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_sTypeServiceIDChanging(value);
					this.SendPropertyChanging();
					this._FK_sTypeServiceID = value;
					this.SendPropertyChanged("FK_sTypeServiceID");
					this.OnFK_sTypeServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sNameService", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string sNameService
		{
			get
			{
				return this._sNameService;
			}
			set
			{
				if ((this._sNameService != value))
				{
					this.OnsNameServiceChanging(value);
					this.SendPropertyChanging();
					this._sNameService = value;
					this.SendPropertyChanged("sNameService");
					this.OnsNameServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDescription", DbType="NVarChar(2000)")]
		public string sDescription
		{
			get
			{
				return this._sDescription;
			}
			set
			{
				if ((this._sDescription != value))
				{
					this.OnsDescriptionChanging(value);
					this.SendPropertyChanging();
					this._sDescription = value;
					this.SendPropertyChanged("sDescription");
					this.OnsDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fPrice", DbType="Float")]
		public System.Nullable<double> fPrice
		{
			get
			{
				return this._fPrice;
			}
			set
			{
				if ((this._fPrice != value))
				{
					this.OnfPriceChanging(value);
					this.SendPropertyChanging();
					this._fPrice = value;
					this.SendPropertyChanged("fPrice");
					this.OnfPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sImage", DbType="VarChar(200)")]
		public string sImage
		{
			get
			{
				return this._sImage;
			}
			set
			{
				if ((this._sImage != value))
				{
					this.OnsImageChanging(value);
					this.SendPropertyChanging();
					this._sImage = value;
					this.SendPropertyChanged("sImage");
					this.OnsImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bStatus", DbType="Bit")]
		public System.Nullable<bool> bStatus
		{
			get
			{
				return this._bStatus;
			}
			set
			{
				if ((this._bStatus != value))
				{
					this.OnbStatusChanging(value);
					this.SendPropertyChanging();
					this._bStatus = value;
					this.SendPropertyChanged("bStatus");
					this.OnbStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblService_tblDetailBookAdvance", Storage="_tblDetailBookAdvances", ThisKey="PK_iServiceID", OtherKey="FK_iServiceID")]
		public EntitySet<tblDetailBookAdvance> tblDetailBookAdvances
		{
			get
			{
				return this._tblDetailBookAdvances;
			}
			set
			{
				this._tblDetailBookAdvances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblService_tblImage", Storage="_tblImages", ThisKey="PK_iServiceID", OtherKey="FK_iServiceID")]
		public EntitySet<tblImage> tblImages
		{
			get
			{
				return this._tblImages;
			}
			set
			{
				this._tblImages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblService_tblReceiptDetail", Storage="_tblReceiptDetails", ThisKey="PK_iServiceID", OtherKey="FK_iServiceID")]
		public EntitySet<tblReceiptDetail> tblReceiptDetails
		{
			get
			{
				return this._tblReceiptDetails;
			}
			set
			{
				this._tblReceiptDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDiscount_tblService", Storage="_tblDiscount", ThisKey="FK_sDiscountID", OtherKey="PK_sDiscountID", IsForeignKey=true)]
		public tblDiscount tblDiscount
		{
			get
			{
				return this._tblDiscount.Entity;
			}
			set
			{
				tblDiscount previousValue = this._tblDiscount.Entity;
				if (((previousValue != value) 
							|| (this._tblDiscount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblDiscount.Entity = null;
						previousValue.tblServices.Remove(this);
					}
					this._tblDiscount.Entity = value;
					if ((value != null))
					{
						value.tblServices.Add(this);
						this._FK_sDiscountID = value.PK_sDiscountID;
					}
					else
					{
						this._FK_sDiscountID = default(string);
					}
					this.SendPropertyChanged("tblDiscount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblTypeService_tblService", Storage="_tblTypeService", ThisKey="FK_sTypeServiceID", OtherKey="PK_sTypeServiceID", IsForeignKey=true)]
		public tblTypeService tblTypeService
		{
			get
			{
				return this._tblTypeService.Entity;
			}
			set
			{
				tblTypeService previousValue = this._tblTypeService.Entity;
				if (((previousValue != value) 
							|| (this._tblTypeService.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblTypeService.Entity = null;
						previousValue.tblServices.Remove(this);
					}
					this._tblTypeService.Entity = value;
					if ((value != null))
					{
						value.tblServices.Add(this);
						this._FK_sTypeServiceID = value.PK_sTypeServiceID;
					}
					else
					{
						this._FK_sTypeServiceID = default(string);
					}
					this.SendPropertyChanged("tblTypeService");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblDetailBookAdvances(tblDetailBookAdvance entity)
		{
			this.SendPropertyChanging();
			entity.tblService = this;
		}
		
		private void detach_tblDetailBookAdvances(tblDetailBookAdvance entity)
		{
			this.SendPropertyChanging();
			entity.tblService = null;
		}
		
		private void attach_tblImages(tblImage entity)
		{
			this.SendPropertyChanging();
			entity.tblService = this;
		}
		
		private void detach_tblImages(tblImage entity)
		{
			this.SendPropertyChanging();
			entity.tblService = null;
		}
		
		private void attach_tblReceiptDetails(tblReceiptDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblService = this;
		}
		
		private void detach_tblReceiptDetails(tblReceiptDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblService = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblStaff")]
	public partial class tblStaff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_iStaffID;
		
		private string _sNameStaff;
		
		private System.Nullable<System.DateTime> _dBirthday;
		
		private string _sPhone;
		
		private string _sGmail;
		
		private System.Nullable<bool> _sSex;
		
		private string _sPassword;
		
		private string _sPosition;
		
		private System.Nullable<double> _sSalary;
		
		private System.Nullable<System.DateTime> _dDayWork;
		
		private System.Nullable<bool> _sStatus;
		
		private EntitySet<tblBookAdvance> _tblBookAdvances;
		
		private EntitySet<tblPost> _tblPosts;
		
		private EntitySet<tblReceipt> _tblReceipts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_iStaffIDChanging(int value);
    partial void OnPK_iStaffIDChanged();
    partial void OnsNameStaffChanging(string value);
    partial void OnsNameStaffChanged();
    partial void OndBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OndBirthdayChanged();
    partial void OnsPhoneChanging(string value);
    partial void OnsPhoneChanged();
    partial void OnsGmailChanging(string value);
    partial void OnsGmailChanged();
    partial void OnsSexChanging(System.Nullable<bool> value);
    partial void OnsSexChanged();
    partial void OnsPasswordChanging(string value);
    partial void OnsPasswordChanged();
    partial void OnsPositionChanging(string value);
    partial void OnsPositionChanged();
    partial void OnsSalaryChanging(System.Nullable<double> value);
    partial void OnsSalaryChanged();
    partial void OndDayWorkChanging(System.Nullable<System.DateTime> value);
    partial void OndDayWorkChanged();
    partial void OnsStatusChanging(System.Nullable<bool> value);
    partial void OnsStatusChanged();
    #endregion
		
		public tblStaff()
		{
			this._tblBookAdvances = new EntitySet<tblBookAdvance>(new Action<tblBookAdvance>(this.attach_tblBookAdvances), new Action<tblBookAdvance>(this.detach_tblBookAdvances));
			this._tblPosts = new EntitySet<tblPost>(new Action<tblPost>(this.attach_tblPosts), new Action<tblPost>(this.detach_tblPosts));
			this._tblReceipts = new EntitySet<tblReceipt>(new Action<tblReceipt>(this.attach_tblReceipts), new Action<tblReceipt>(this.detach_tblReceipts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_iStaffID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_iStaffID
		{
			get
			{
				return this._PK_iStaffID;
			}
			set
			{
				if ((this._PK_iStaffID != value))
				{
					this.OnPK_iStaffIDChanging(value);
					this.SendPropertyChanging();
					this._PK_iStaffID = value;
					this.SendPropertyChanged("PK_iStaffID");
					this.OnPK_iStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sNameStaff", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string sNameStaff
		{
			get
			{
				return this._sNameStaff;
			}
			set
			{
				if ((this._sNameStaff != value))
				{
					this.OnsNameStaffChanging(value);
					this.SendPropertyChanging();
					this._sNameStaff = value;
					this.SendPropertyChanged("sNameStaff");
					this.OnsNameStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dBirthday", DbType="Date")]
		public System.Nullable<System.DateTime> dBirthday
		{
			get
			{
				return this._dBirthday;
			}
			set
			{
				if ((this._dBirthday != value))
				{
					this.OndBirthdayChanging(value);
					this.SendPropertyChanging();
					this._dBirthday = value;
					this.SendPropertyChanged("dBirthday");
					this.OndBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sPhone", DbType="Char(11)")]
		public string sPhone
		{
			get
			{
				return this._sPhone;
			}
			set
			{
				if ((this._sPhone != value))
				{
					this.OnsPhoneChanging(value);
					this.SendPropertyChanging();
					this._sPhone = value;
					this.SendPropertyChanged("sPhone");
					this.OnsPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sGmail", DbType="VarChar(150)")]
		public string sGmail
		{
			get
			{
				return this._sGmail;
			}
			set
			{
				if ((this._sGmail != value))
				{
					this.OnsGmailChanging(value);
					this.SendPropertyChanging();
					this._sGmail = value;
					this.SendPropertyChanged("sGmail");
					this.OnsGmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sSex", DbType="Bit")]
		public System.Nullable<bool> sSex
		{
			get
			{
				return this._sSex;
			}
			set
			{
				if ((this._sSex != value))
				{
					this.OnsSexChanging(value);
					this.SendPropertyChanging();
					this._sSex = value;
					this.SendPropertyChanged("sSex");
					this.OnsSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sPassword", DbType="VarChar(50)")]
		public string sPassword
		{
			get
			{
				return this._sPassword;
			}
			set
			{
				if ((this._sPassword != value))
				{
					this.OnsPasswordChanging(value);
					this.SendPropertyChanging();
					this._sPassword = value;
					this.SendPropertyChanged("sPassword");
					this.OnsPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sPosition", DbType="NVarChar(50)")]
		public string sPosition
		{
			get
			{
				return this._sPosition;
			}
			set
			{
				if ((this._sPosition != value))
				{
					this.OnsPositionChanging(value);
					this.SendPropertyChanging();
					this._sPosition = value;
					this.SendPropertyChanged("sPosition");
					this.OnsPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sSalary", DbType="Float")]
		public System.Nullable<double> sSalary
		{
			get
			{
				return this._sSalary;
			}
			set
			{
				if ((this._sSalary != value))
				{
					this.OnsSalaryChanging(value);
					this.SendPropertyChanging();
					this._sSalary = value;
					this.SendPropertyChanged("sSalary");
					this.OnsSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dDayWork", DbType="Date")]
		public System.Nullable<System.DateTime> dDayWork
		{
			get
			{
				return this._dDayWork;
			}
			set
			{
				if ((this._dDayWork != value))
				{
					this.OndDayWorkChanging(value);
					this.SendPropertyChanging();
					this._dDayWork = value;
					this.SendPropertyChanged("dDayWork");
					this.OndDayWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sStatus", DbType="Bit")]
		public System.Nullable<bool> sStatus
		{
			get
			{
				return this._sStatus;
			}
			set
			{
				if ((this._sStatus != value))
				{
					this.OnsStatusChanging(value);
					this.SendPropertyChanging();
					this._sStatus = value;
					this.SendPropertyChanged("sStatus");
					this.OnsStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStaff_tblBookAdvance", Storage="_tblBookAdvances", ThisKey="PK_iStaffID", OtherKey="FK_iStaffID")]
		public EntitySet<tblBookAdvance> tblBookAdvances
		{
			get
			{
				return this._tblBookAdvances;
			}
			set
			{
				this._tblBookAdvances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStaff_tblPost", Storage="_tblPosts", ThisKey="PK_iStaffID", OtherKey="FK_iStaffID")]
		public EntitySet<tblPost> tblPosts
		{
			get
			{
				return this._tblPosts;
			}
			set
			{
				this._tblPosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStaff_tblReceipt", Storage="_tblReceipts", ThisKey="PK_iStaffID", OtherKey="FK_iStaffID")]
		public EntitySet<tblReceipt> tblReceipts
		{
			get
			{
				return this._tblReceipts;
			}
			set
			{
				this._tblReceipts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblBookAdvances(tblBookAdvance entity)
		{
			this.SendPropertyChanging();
			entity.tblStaff = this;
		}
		
		private void detach_tblBookAdvances(tblBookAdvance entity)
		{
			this.SendPropertyChanging();
			entity.tblStaff = null;
		}
		
		private void attach_tblPosts(tblPost entity)
		{
			this.SendPropertyChanging();
			entity.tblStaff = this;
		}
		
		private void detach_tblPosts(tblPost entity)
		{
			this.SendPropertyChanging();
			entity.tblStaff = null;
		}
		
		private void attach_tblReceipts(tblReceipt entity)
		{
			this.SendPropertyChanging();
			entity.tblStaff = this;
		}
		
		private void detach_tblReceipts(tblReceipt entity)
		{
			this.SendPropertyChanging();
			entity.tblStaff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblStore")]
	public partial class tblStore : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_iStoreID;
		
		private string _sDescription;
		
		private System.Nullable<System.DateTime> _dOpenStore;
		
		private System.Nullable<System.DateTime> _dCloseStore;
		
		private string _sAddress;
		
		private EntitySet<tblBookAdvance> _tblBookAdvances;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_iStoreIDChanging(int value);
    partial void OnPK_iStoreIDChanged();
    partial void OnsDescriptionChanging(string value);
    partial void OnsDescriptionChanged();
    partial void OndOpenStoreChanging(System.Nullable<System.DateTime> value);
    partial void OndOpenStoreChanged();
    partial void OndCloseStoreChanging(System.Nullable<System.DateTime> value);
    partial void OndCloseStoreChanged();
    partial void OnsAddressChanging(string value);
    partial void OnsAddressChanged();
    #endregion
		
		public tblStore()
		{
			this._tblBookAdvances = new EntitySet<tblBookAdvance>(new Action<tblBookAdvance>(this.attach_tblBookAdvances), new Action<tblBookAdvance>(this.detach_tblBookAdvances));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_iStoreID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_iStoreID
		{
			get
			{
				return this._PK_iStoreID;
			}
			set
			{
				if ((this._PK_iStoreID != value))
				{
					this.OnPK_iStoreIDChanging(value);
					this.SendPropertyChanging();
					this._PK_iStoreID = value;
					this.SendPropertyChanged("PK_iStoreID");
					this.OnPK_iStoreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDescription", DbType="NVarChar(400)")]
		public string sDescription
		{
			get
			{
				return this._sDescription;
			}
			set
			{
				if ((this._sDescription != value))
				{
					this.OnsDescriptionChanging(value);
					this.SendPropertyChanging();
					this._sDescription = value;
					this.SendPropertyChanged("sDescription");
					this.OnsDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dOpenStore", DbType="Date")]
		public System.Nullable<System.DateTime> dOpenStore
		{
			get
			{
				return this._dOpenStore;
			}
			set
			{
				if ((this._dOpenStore != value))
				{
					this.OndOpenStoreChanging(value);
					this.SendPropertyChanging();
					this._dOpenStore = value;
					this.SendPropertyChanged("dOpenStore");
					this.OndOpenStoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dCloseStore", DbType="Date")]
		public System.Nullable<System.DateTime> dCloseStore
		{
			get
			{
				return this._dCloseStore;
			}
			set
			{
				if ((this._dCloseStore != value))
				{
					this.OndCloseStoreChanging(value);
					this.SendPropertyChanging();
					this._dCloseStore = value;
					this.SendPropertyChanged("dCloseStore");
					this.OndCloseStoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAddress", DbType="NVarChar(50)")]
		public string sAddress
		{
			get
			{
				return this._sAddress;
			}
			set
			{
				if ((this._sAddress != value))
				{
					this.OnsAddressChanging(value);
					this.SendPropertyChanging();
					this._sAddress = value;
					this.SendPropertyChanged("sAddress");
					this.OnsAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStore_tblBookAdvance", Storage="_tblBookAdvances", ThisKey="PK_iStoreID", OtherKey="FK_iStoreID")]
		public EntitySet<tblBookAdvance> tblBookAdvances
		{
			get
			{
				return this._tblBookAdvances;
			}
			set
			{
				this._tblBookAdvances.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblBookAdvances(tblBookAdvance entity)
		{
			this.SendPropertyChanging();
			entity.tblStore = this;
		}
		
		private void detach_tblBookAdvances(tblBookAdvance entity)
		{
			this.SendPropertyChanging();
			entity.tblStore = null;
		}
	}
}
#pragma warning restore 1591
